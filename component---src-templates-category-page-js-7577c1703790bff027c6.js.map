{"version":3,"sources":["webpack:///./src/components/archiveSection.js","webpack:///./src/images/category/yoga.jpeg","webpack:///./src/utils/utills.js","webpack:///./src/images/category/mountain.jpeg","webpack:///./src/images/category/lidemy.png","webpack:///./src/images/category/weeklyjournal.jpeg","webpack:///./src/components/postType/Title.js","webpack:///./src/components/postType/Card.js","webpack:///./src/components/postType/Intro.js","webpack:///./src/components/postType/Gallery.js","webpack:///./src/components/categoryBanner.js","webpack:///./src/templates/category-page.js","webpack:///./src/images/category/kotlin.jpeg","webpack:///./src/images/category/taitung.jpeg","webpack:///./src/images/category/travel.jpeg","webpack:///./src/images/category/modern-react-with-redux.jpeg"],"names":["ItemWrapper","styled","div","ArchiveTitle","h4","ArchiveSection","type","year","posts","map","post","index","node","frontmatter","key","module","exports","getArchiveList","nodes","yearList","Set","forEach","date","split","add","archiveList","filter","push","PostLink","Link","PostDate","p","PostTitle","to","fields","slug","title","PostArticle","article","PostCover","props","url","Category","Content","TagWrap","PostCard","sub","tags","category","tag","excerpt","thumbnail","childImageSharp","fluid","src","IntroWrapper","PostDetail","PostDesc","PostIntro","description","Mask","PostContent","PostGallery","ImageContainer","img","CategoryBanner","link","yogaImg","mountainImg","kotlinImg","lidemyImg","travelImg","weeklyJournalImg","taitungImg","modernReactwithRedux","CategoryPageTemplate","render","this","pageContext","data","allMarkdownRemark","edges","siteTitle","site","siteMetadata","location","keywords","className","archive","React","Component"],"mappings":"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","file":"component---src-templates-category-page-js-7577c1703790bff027c6.js","sourcesContent":["import React from \"react\"\nimport styled from 'styled-components'\nimport { PostCard, PostTitle } from '../components/postType'\n\nconst ItemWrapper = styled.div`\nborder-bottom: 1px solid #eeeeee;\npadding: 24px 0 36px 0;\n`\nconst ArchiveTitle = styled.h4`\n  margin: 0;\n  padding: 0;\n  padding-bottom: 24px;\n  font-size: 22px;\n  font-weight: 600;\n`\n\nconst ArchiveSection =  ({ type, year, posts }) => {\n  return (\n    <ItemWrapper>\n      <ArchiveTitle>{year}</ArchiveTitle>\n      {posts.map((post, index) => {\n        return type === 'card'?  <PostCard type={post.node.frontmatter.type} key={index} node={post.node} /> : <PostTitle key={index} node={post.node}/>\n      })}\n    </ItemWrapper>\n)}\n\n\nexport default ArchiveSection","module.exports = __webpack_public_path__ + \"static/yoga-309c240b0fa5fe7535c21e61b07150ed.jpeg\";","export function getArchiveList(nodes) {\n  const yearList = new Set()\n  nodes.forEach((post) => {\n    const year = post.node.frontmatter.date.split(', ')[1]\n    yearList.add(year)\n  })\n\n  const archiveList = []\n  yearList.forEach((year) => {\n    const posts = nodes.filter(post => post.node.frontmatter.date.split(', ')[1] === year)\n    archiveList.push({ year, posts })\n  })\n\n  return archiveList\n}","module.exports = __webpack_public_path__ + \"static/mountain-26184998bfb7e9fd2d66b557d96a7c2a.jpeg\";","module.exports = __webpack_public_path__ + \"static/lidemy-e57d3119009c574dde0fe4200ff69e8e.png\";","module.exports = __webpack_public_path__ + \"static/weeklyjournal-b90b83a35a7a3cbd90d91de44e8a0603.jpeg\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostLink = styled(Link)`\n  font-size: 16px;\n  line-height: 23px;\n  letter-spacing: .48px;\n  font-weight: 400;\n  font-stretch: 100%;\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\nconst PostDate = styled.p`\n  color: #9e9e9e;\n  font-size: 13px;\n  font-weight: 500;\n`\n\nconst PostTitle = ({ type, node }) => {\n  return (\n    <>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      {<PostDate>{node.frontmatter.date}</PostDate>}\n    </>\n  )\n}\n\nexport default PostTitle","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\nconst PostArticle = styled.article`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 100%;\n  padding: 30px 0;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`\n\nconst PostCover = styled(Link)`\n  display: block;\n  width: 27%;\n  height:0;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n  transition: opacity .3s ease-in-out;\n  opacity: 1;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-bottom: 55%;\n  }\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  padding-right: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  \n  h4 {\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: #687385;\n    font-weight: 700;\n    white-space: nowrap;\n\n    @media (max-width: 800px) {\n      margin: 0;\n      margin-right: 10px;\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n\n  a {\n    white-space: nowrap;\n    color: #687385;\n    font-size: 14px;\n    cursor: pointer;\n\n    &:hover {\n      color: #4a4a4a;\n    }\n\n    @media (max-width: 800px) {\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n`\n\nconst Content = styled.div`\n  width: ${props => props.type === 'coding' ? '75%': '50%'};\n  padding-right: 10px;\n\n  a {\n    display: block;\n    font-size: 20px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    color: #4a4a4a;\n\n    &:hover {\n      color: #C5322E;\n      text-decoration: none;\n    }\n  }\n\n  p {\n    overflow:hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${props => props.type === 'coding' ? '2': '3'};\n    -webkit-box-orient: vertical;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-right: 0px;\n  }\n`\nconst TagWrap = styled.div`\n  a {\n    display: block;\n    @media (max-width: 800px) {\n      display: none;\n    }\n  }\n`\n\n\nconst PostCard =  ({ sub, type, node }) => {\n  const tags = node.frontmatter.tags\n  return (\n  <PostArticle>\n    <Category>\n      <h4>{node.frontmatter.date}</h4>\n      {sub === 'category' ?\n        (<Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>) :\n        (<TagWrap>\n          {tags.map((tag, index) => <Link key={index} to={`/tags/${kebabCase(tag)}`}>{`#${tag}`}</Link>)}\n        </TagWrap>)\n      }\n    </Category>\n    <Content type={type}>\n      <Link to={node.fields.slug}>{node.frontmatter.title || node.fields.slug}</Link>\n      <p>{node.excerpt !== '…'? node.excerpt : ''}</p>\n    </Content>\n    {node.frontmatter.thumbnail && <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src} />}\n  </PostArticle>\n)}\n\n\nexport default PostCard","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\n\nconst IntroWrapper = styled.div`\n  padding: 20px;\n\n  @media (max-width: 850px) {\n    padding: 20px 0;\n  }\n\n  hr {\n    margin: 0;\n    padding: 0;\n    width: 10px;\n    height: 1px;\n    background: #9a9a9a;\n  }\n`\n\nconst PostDetail = styled.div`\n  display: flex;\n  margin: 10px 0;\n\n  p, a {\n    margin: 0;\n    padding: 0;\n    margin-right: 10px;\n    color: #9e9e9e;\n    font-size: 13px;\n    font-weight: 500;\n  }\n\n  a {\n    font-weight: bold;\n  }\n`\n\nconst PostLink = styled(Link)`\n  margin-bottom: .25rem;\n  font-size: 1.9rem;\n  font-weight: bold;\n  line-height: 1.4;\n  letter-spacing: .48px;\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\n\nconst PostDesc = styled.p`\n  font-size: 16px;\n  overflow:hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`\n\nconst PostIntro = ({ node }) => {\n  return (\n    <IntroWrapper>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      <PostDetail>\n        <p>{node.frontmatter.date}</p>\n        <Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>\n      </PostDetail>\n      <PostDesc>{node.frontmatter.description || node.excerpt}</PostDesc>\n      <hr/>\n    </IntroWrapper>\n  )\n}\n\nexport default PostIntro","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostCard = styled.article`\n  position: relative;\n  display: flex;\n  margin-bottom: 5vh;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`\nconst PostCover = styled(Link)`\n  position: relative;\n  display: block;\n  width: 500px;\n  height: 338px;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  background-position: center center;\n\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    padding-bottom: 55%;\n\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n\n  &:hover {\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n`\nconst Mask = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, .3);\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  transition: opacity .3s ease-in-out;\n`\nconst PostContent = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 550px;\n  padding: 10px;\n  white-space: normal;\n  width: 250px;\n  height: 180px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 7;\n  -webkit-box-orient: vertical;\n  font-style: italic;\n\n  @media (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    left: 0;\n    width: auto;\n    height: auto;\n  }\n`\nconst PostDetail = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  visibility: hidden;\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  color: white;\n\n  h3, h5 {\n    text-align:right;\n    margin: 0;\n    padding: 0;\n    font-family: \"IBM Plex Serif\",source-han-serif-tc,serif;\n    font-size: 28px;\n    line-height: 32px;\n  }\n  h5 {\n    font-size: 15px;\n  }\n`\n\nconst PostGallery =  ({ node }) => {\n  const tags = node.frontmatter.tags\n  return (\n    <PostCard>\n      <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src}>\n        <Mask />\n        <PostDetail>\n          <h5>{node.frontmatter.date}</h5>\n          <h3>{node.frontmatter.title}</h3>\n        </PostDetail>\n      </PostCover>\n      <PostContent>{node.excerpt !== '…'? node.excerpt : ''}</PostContent>\n    </PostCard>\n  )}\n\n\nexport default PostGallery","import React from \"react\"\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport yogaImg from '../images/category/yoga.jpeg'\nimport mountainImg from '../images/category/mountain.jpeg'\nimport kotlinImg from '../images/category/kotlin.jpeg'\nimport lidemyImg from '../images/category/lidemy.png'\nimport taitungImg from '../images/category/taitung.jpeg'\nimport travelImg from '../images/category/travel.jpeg'\nimport weeklyJournalImg from '../images/category/weeklyjournal.jpeg'\nimport modernReactwithRedux from '../images/category/modern-react-with-redux.jpeg'\n\nconst ImageContainer = styled(Link)`\n  background-position: center;\n  background-size: cover;\n  ${props => `\n    background-image: url(${props.img});\n  `}\n  width: 100%;\n  height: 0;\n  padding-bottom: 30%;\n  margin-top: 20px;\n  overflow: hidden;\n`\n\nconst CategoryBanner = ({ category }) => {\n  let img = ''\n  let link = ''\n  switch (category) {\n    case 'Yoga':\n      img = yogaImg\n      break;\n    case '山裡的日子':\n      img = mountainImg\n      break;\n    case 'Android':\n      img = kotlinImg\n      break;\n    case '程式導師計畫':\n      img = lidemyImg\n      link = 'https://bootcamp.lidemy.com/'\n      break;\n    case '旅行日記':\n      img = travelImg\n      break;\n    case 'Weekly Journal':\n      img = weeklyJournalImg\n      break;\n    case '宅在台東的一百種生活':\n      img = taitungImg\n      break;\n    case 'Modern React with Redux':\n      img = modernReactwithRedux\n      link = 'https://www.udemy.com/share/101WcYAEceeVtQRH8F/'\n      break;\n    default:\n      break;\n  }\n  return (\n    <ImageContainer to={link} img={img}/>\n  )\n}\n\nexport default CategoryBanner","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport CategoryBanner from \"../components/categoryBanner\"\nimport { getArchiveList } from \"../utils/utills\"\nimport ArchiveSection from '../components/archiveSection'\n\nclass CategoryPageTemplate extends React.Component {\n  render() {\n    const category = this.props.pageContext.category\n    const posts = this.props.data.allMarkdownRemark.edges\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const archiveList = getArchiveList(posts)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={`${category}`}\n          keywords={[`${category}`, `blog`]}\n        />\n        <header className=\"category-page-head\">\n          <h1>{category}</h1>\n          <CategoryBanner category={category}/>\n        </header>\n        <div className=\"archive-wrapper\">\n          {archiveList.map((archive, index) => {\n            return <ArchiveSection key={index} type=\"card\" year={archive.year} posts={archive.posts}/>\n          })}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default CategoryPageTemplate\n\nexport const pageQuery = graphql`\n  query PostByCategory($category: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { category: { eq: $category } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n            category\n            type\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/kotlin-316e30cee68d766b615244f9842aa1f6.jpeg\";","module.exports = __webpack_public_path__ + \"static/taitung-dc84374eb45cb36bc54add432fe3fc69.jpeg\";","module.exports = __webpack_public_path__ + \"static/travel-1c82bd762bcefb86e9644543b6ee146f.jpeg\";","module.exports = __webpack_public_path__ + \"static/modern-react-with-redux-0fc2a83196a16c9a555aa90e39fcee2e.jpeg\";"],"sourceRoot":""}