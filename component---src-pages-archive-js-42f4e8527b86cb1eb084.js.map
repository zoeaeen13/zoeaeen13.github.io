{"version":3,"sources":["webpack:///./src/components/archiveSection.js","webpack:///./src/utils/utills.js","webpack:///./src/components/postType/Title.js","webpack:///./src/components/postType/Card.js","webpack:///./src/components/postType/Intro.js","webpack:///./src/components/postType/Gallery.js","webpack:///./src/pages/archive.js"],"names":["ItemWrapper","styled","div","ArchiveTitle","h4","ArchiveSection","type","year","posts","map","post","index","node","frontmatter","key","getArchiveList","nodes","yearList","Set","forEach","date","split","add","archiveList","filter","push","PostLink","Link","PostDate","p","PostTitle","to","fields","slug","title","PostArticle","article","PostCover","props","url","Category","Content","TagWrap","PostCard","sub","tags","category","tag","excerpt","thumbnail","childImageSharp","fluid","src","IntroWrapper","PostDetail","PostDesc","PostIntro","description","Mask","PostContent","PostGallery","BlogIndex","data","siteTitle","site","siteMetadata","allMarkdownRemark","edges","keywords","className","archive","query","render"],"mappings":"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","file":"component---src-pages-archive-js-42f4e8527b86cb1eb084.js","sourcesContent":["import React from \"react\"\nimport styled from 'styled-components'\nimport { PostCard, PostTitle } from '../components/postType'\n\nconst ItemWrapper = styled.div`\nborder-bottom: 1px solid #eeeeee;\npadding: 24px 0 36px 0;\n`\nconst ArchiveTitle = styled.h4`\n  margin: 0;\n  padding: 0;\n  padding-bottom: 24px;\n  font-size: 22px;\n  font-weight: 600;\n`\n\nconst ArchiveSection =  ({ type, year, posts }) => {\n  return (\n    <ItemWrapper>\n      <ArchiveTitle>{year}</ArchiveTitle>\n      {posts.map((post, index) => {\n        return type === 'card'?  <PostCard type={post.node.frontmatter.type} key={index} node={post.node} /> : <PostTitle key={index} node={post.node}/>\n      })}\n    </ItemWrapper>\n)}\n\n\nexport default ArchiveSection","export function getArchiveList(nodes) {\n  const yearList = new Set()\n  nodes.forEach((post) => {\n    const year = post.node.frontmatter.date.split(', ')[1]\n    yearList.add(year)\n  })\n\n  const archiveList = []\n  yearList.forEach((year) => {\n    const posts = nodes.filter(post => post.node.frontmatter.date.split(', ')[1] === year)\n    archiveList.push({ year, posts })\n  })\n\n  return archiveList\n}","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostLink = styled(Link)`\n  font-size: 16px;\n  line-height: 23px;\n  letter-spacing: .48px;\n  font-weight: 400;\n  font-stretch: 100%;\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\nconst PostDate = styled.p`\n  color: #9e9e9e;\n  font-size: 13px;\n  font-weight: 500;\n`\n\nconst PostTitle = ({ type, node }) => {\n  return (\n    <>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      {<PostDate>{node.frontmatter.date}</PostDate>}\n    </>\n  )\n}\n\nexport default PostTitle","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\nconst PostArticle = styled.article`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 100%;\n  padding: 30px 0;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`\n\nconst PostCover = styled(Link)`\n  display: block;\n  width: 27%;\n  height:0;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n  transition: opacity .3s ease-in-out;\n  opacity: 1;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-bottom: 55%;\n  }\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  padding-right: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  \n  h4 {\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: #687385;\n    font-weight: 700;\n    white-space: nowrap;\n\n    @media (max-width: 800px) {\n      margin: 0;\n      margin-right: 10px;\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n\n  a {\n    white-space: nowrap;\n    color: #687385;\n    font-size: 14px;\n    cursor: pointer;\n\n    &:hover {\n      color: #4a4a4a;\n    }\n\n    @media (max-width: 800px) {\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n`\n\nconst Content = styled.div`\n  width: ${props => props.type === 'coding' ? '75%': '50%'};\n  padding-right: 10px;\n\n  a {\n    display: block;\n    font-size: 20px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    color: #4a4a4a;\n\n    &:hover {\n      color: #C5322E;\n      text-decoration: none;\n    }\n  }\n\n  p {\n    overflow:hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${props => props.type === 'coding' ? '2': '3'};\n    -webkit-box-orient: vertical;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-right: 0px;\n  }\n`\nconst TagWrap = styled.div`\n  a {\n    display: block;\n    @media (max-width: 800px) {\n      display: none;\n    }\n  }\n`\n\n\nconst PostCard =  ({ sub, type, node }) => {\n  const tags = node.frontmatter.tags\n  return (\n  <PostArticle>\n    <Category>\n      <h4>{node.frontmatter.date}</h4>\n      {sub === 'category' ?\n        (<Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>) :\n        (<TagWrap>\n          {tags.map((tag, index) => <Link key={index} to={`/tags/${kebabCase(tag)}`}>{`#${tag}`}</Link>)}\n        </TagWrap>)\n      }\n    </Category>\n    <Content type={type}>\n      <Link to={node.fields.slug}>{node.frontmatter.title || node.fields.slug}</Link>\n      <p>{node.excerpt !== 'â€¦'? node.excerpt : ''}</p>\n    </Content>\n    {node.frontmatter.thumbnail && <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src} />}\n  </PostArticle>\n)}\n\n\nexport default PostCard","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\n\nconst IntroWrapper = styled.div`\n  padding: 20px;\n\n  @media (max-width: 850px) {\n    padding: 20px 0;\n  }\n\n  hr {\n    margin: 0;\n    padding: 0;\n    width: 10px;\n    height: 1px;\n    background: #9a9a9a;\n  }\n`\n\nconst PostDetail = styled.div`\n  display: flex;\n  margin: 10px 0;\n\n  p, a {\n    margin: 0;\n    padding: 0;\n    margin-right: 10px;\n    color: #9e9e9e;\n    font-size: 13px;\n    font-weight: 500;\n  }\n\n  a {\n    font-weight: bold;\n  }\n`\n\nconst PostLink = styled(Link)`\n  margin-bottom: .25rem;\n  font-size: 1.9rem;\n  font-weight: bold;\n  line-height: 1.4;\n  letter-spacing: .48px;\n\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\n\nconst PostDesc = styled.p`\n  font-size: 16px;\n  overflow:hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`\n\nconst PostIntro = ({ node }) => {\n  return (\n    <IntroWrapper>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      <PostDetail>\n        <p>{node.frontmatter.date}</p>\n        <Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>\n      </PostDetail>\n      <PostDesc>{node.frontmatter.description || node.excerpt}</PostDesc>\n      <hr/>\n    </IntroWrapper>\n  )\n}\n\nexport default PostIntro","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostCard = styled.article`\n  position: relative;\n  display: flex;\n  margin-bottom: 5vh;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`\nconst PostCover = styled(Link)`\n  position: relative;\n  display: block;\n  width: 500px;\n  height: 338px;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  background-position: center center;\n\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    padding-bottom: 55%;\n\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n\n  &:hover {\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n`\nconst Mask = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, .3);\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  transition: opacity .3s ease-in-out;\n`\nconst PostContent = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 550px;\n  padding: 10px;\n  white-space: normal;\n  width: 250px;\n  height: 180px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 7;\n  -webkit-box-orient: vertical;\n  font-style: italic;\n\n  @media (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    left: 0;\n    width: auto;\n    height: auto;\n  }\n`\nconst PostDetail = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  visibility: hidden;\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  color: white;\n\n  h3, h5 {\n    text-align:right;\n    margin: 0;\n    padding: 0;\n    font-family: \"IBM Plex Serif\",source-han-serif-tc,serif;\n    font-size: 28px;\n  }\n  h5 {\n    font-size: 13px;\n  }\n`\n\nconst PostGallery =  ({ node }) => {\n  const tags = node.frontmatter.tags\n  return (\n    <PostCard>\n      <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src}>\n        <Mask />\n        <PostDetail>\n          <h5>{node.frontmatter.date}</h5>\n          <h3>{node.frontmatter.title}</h3>\n        </PostDetail>\n      </PostCover>\n      <PostContent>{node.excerpt !== 'â€¦'? node.excerpt : ''}</PostContent>\n    </PostCard>\n  )}\n\n\nexport default PostGallery","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ArchiveSection from '../components/archiveSection'\nimport { getArchiveList } from '../utils/utills'\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst BlogIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const nodes = data.allMarkdownRemark.edges\n  const archiveList = getArchiveList(nodes.filter(node => node.node.frontmatter.type !== 'life'))\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Archive\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      {/* <header className=\"archive-page-head\">\n        <h1>Archive</h1>\n      </header> */}\n      <div className=\"archive-wrapper\">\n        {archiveList.map((archive, index) => {\n          return <ArchiveSection key={index} year={archive.year} posts={archive.posts}/>\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            type\n            tags\n            category\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}