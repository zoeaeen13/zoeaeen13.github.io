{"componentChunkName":"component---src-templates-tag-page-js","path":"/tags/lidemy/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"allMarkdownRemark":{"totalCount":18,"edges":[{"node":{"excerpt":"在 hook 出來以前，其實就有 class component 和 function component 兩種寫法，不過當時只有前者可以擁有 state 和 lifecycle，function component 只用來單純呈現資料，內容寫死或是透過 props…","fields":{"slug":"/Lidemy/React：class component 與 function component 的差別/"},"frontmatter":{"date":"Dec 10, 2020","title":"React：Class component 與 Functional component 的差別","tags":["React","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"什麼是 Hook？ Hook 是一種重複使用邏輯的方法，能用來在不同的 Component 之間重複使用邏輯，也讓 function component 擁有 state 或 class component 的功能。 不能在迴圈、判斷式、或是嵌套 function…","fields":{"slug":"/Lidemy/React：認識 Hooks/"},"frontmatter":{"date":"Dec 07, 2020","title":"React：認識 Hooks","tags":["React","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"什麼是 Component 的生命週期？ 不同於 function component，class component…","fields":{"slug":"/Lidemy/React Lifecycle：認識生命週期方法及觸發時間點/"},"frontmatter":{"date":"Dec 05, 2020","title":"React：認識生命週期方法及觸發時間點","tags":["React","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"React 是 JavaScript 套件，而非一套框架，它在 MVC 架構中實際上是負責 View（介面）的部分，而要討論為什麼需要 React，就要從畫面談起。 傳統上，我們將 JS 和 HTML、CSS…","fields":{"slug":"/Lidemy/在用之前，先了解為什麼要學 React/"},"frontmatter":{"date":"Nov 29, 2020","title":"為什麼要學 React？","tags":["React","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"本篇將透過解釋 Event Loop 機制，理解以下常見的名詞及 JS 執行特性 Call Stack 執行堆疊 JS 是一個單執行緒的語言，有一個單執行緒的 Runtime（執行環境系統），執行緒可以想像成執行工作的單位，單執行緒意味著它一次只能做一件事。在程式碼運行前，JS…","fields":{"slug":"/Lidemy/談談 Event Loop/"},"frontmatter":{"date":"Nov 12, 2020","title":"談談 Event Loop","tags":["JavaScript","Lidemy","Event Loop"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"單頁應用程式 single-page application，簡單來說，它一改以往 Multi-page（多頁式）的設計模式：每點選一個按鈕、進行一個動作，就得重新載入另外一個頁面的操作。SPA…","fields":{"slug":"/Lidemy/什麼是 Single Page Application/"},"frontmatter":{"date":"Oct 11, 2020","title":"什麼是 Single Page Application","tags":["JavaScript","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"加密（Encryption） 將明文資訊改變為難以讀取的密文內容，讓人不可讀取。只有擁有解密方法的人，經由解密過程才能將它還原為正常內容，可以將重要資料保護起來，不讓其他人看到。 加密內容是可逆的 有鑰匙（Key）就可以解密讀取 AES…","fields":{"slug":"/Lidemy/雜湊跟加密的差別在哪裡，為什麼密碼要雜湊過後才存入資料庫/"},"frontmatter":{"date":"Oct 11, 2020","title":"為什麼密碼要雜湊過後才存入資料庫？","tags":["Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"1. SQL Injection 的攻擊原理以及防範方法 又稱 SQL 隱碼或 SQL 注碼，發生於應用程式與資料庫層的安全漏洞。\n簡單來說，利用在輸入的字串之中夾帶 SQL 指令，因程式設計者忽略了字元檢查，這些夾帶進去的惡意指令就會被資料庫伺服器誤認為是正常的 SQL…","fields":{"slug":"/Lidemy/認識 SQL Injection、XSS、CSRF 等攻擊原理及防範方法/"},"frontmatter":{"date":"Oct 11, 2020","title":"認識 SQL Injection、XSS、CSRF","tags":["Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"JavaScript 是一個事件驅動（Event-driven）的語言，當瀏覽器載入網頁後，會等到「事件」被觸發（使用者點擊、按下鍵盤等）才會再進行相對應的執行。 事件（Event） 指的是在 DOM 物件上發生的事件，具有多種類型，可以參考這裡，而 Event…","fields":{"slug":"/Lidemy/事件傳遞機制/"},"frontmatter":{"date":"Aug 31, 2020","title":"[第七週] 認識事件傳遞機制","tags":["Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"文件物件模型（Document Object Model, DOM）是 HTML 的程式介面，它提供了一個文件樹的結構化表示法，讓程式可以存取、改變風格和其內容的方法  Q: DOM…","fields":{"slug":"/Lidemy/什麼是 DOM/"},"frontmatter":{"date":"Aug 30, 2020","title":"[第七週] 什麼是 DOM？","tags":["Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"相較於屬性 display 定義元素與其它元素之間的排版關係、整體呈現方式，position 是透過 top、right、bottom 和 left 特性來「特別定位」元素，是經過計算後得到的位置。 常見定位元素有以下分類： 相對定位元素（relatively…","fields":{"slug":"/Lidemy/position 的差別/"},"frontmatter":{"date":"Aug 23, 2020","title":"[第六週] 了解 position: static, relative, absolute 跟 fixed 的差別","tags":["CSS","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"相較於塊狀佈局（Block layout）以垂直方向為準、行內佈局（Inline layout）以水平方向為準，這是一種新的布局方式，是為了適應不同螢幕和設備尺寸而誕生的佈局模式： 多數瀏覽器已有支援 flexbox  沒有固定水平、垂直，而是利用主軸（main axis…","fields":{"slug":"/Lidemy/flexbox/"},"frontmatter":{"date":"Aug 22, 2020","title":"[第六週] 認識 CSS 的 flexbox 排版","tags":["CSS","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"display 這個屬性，是用來定義標籤們的顯示方式，每一個 html 元素都會有一個預設的 display 屬性，inline 或 block，可以透過 CSS 來改變元素預設的顯示方式，進而達到排版目的。 常見的顯示方式有兩種： Block 區塊元素 常見元素標籤：div…","fields":{"slug":"/Lidemy/display 的差別/"},"frontmatter":{"date":"Aug 21, 2020","title":"[第六週] 了解 inline, block 跟 inline-block 的差別","tags":["CSS","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"什麼是 API？ API 全名是 Application Programming Interface…","fields":{"slug":"/kotlin/Restful API 是啥？有什麼不一樣？/"},"frontmatter":{"date":"Jul 15, 2020","title":"[第四週] 認識 HTTP 協定及 Restful API","tags":["Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"變數沒有型別，值才有 JavaScript 型別的資訊只在值或物件本身，變數只用來作為取得值或物件的參考。型態主要有兩種，分成 Primitive type（基本型別）和 Object types（物件型別）。 一、Primitive type 基本型別 內建型別（Built…","fields":{"slug":"/Lidemy/認識 JS 變數/"},"frontmatter":{"date":"Jul 05, 2020","title":"[第二週] 認識 JS 型別","tags":["JavaScript","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"早期只能用在瀏覽器，透過它去操控畫面上的東西，瀏覽器會提供給 JS 一些方法。JS 不能單獨執行，一定要有一個執行環境存在，目前多數情況不是使用瀏覽器就是用 Node.js： Node.js 並非程式語言，而是一種執行環境（Runtime），是可以讓 JS…","fields":{"slug":"/Lidemy/初識 JavaScript、變數及運算子/"},"frontmatter":{"date":"Jul 03, 2020","title":"[第二週] 初識 JavaScript","tags":["JavaScript","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"如何將程式碼從本地放上 Github repository 在 Github 上建立一個 repository\n 建立後系統會提示你該怎麼做，將 code 複製下來去終端機操作\n 操作遠端和本地的溝通 特別查一下推上本地的新分支，這個指令會把你手邊的 today…","fields":{"slug":"/Lidemy/Git 遠端協作及 Pull Request 介紹/"},"frontmatter":{"date":"Jun 06, 2020","title":"[第一週] Git 協作及 Pull Request 介紹","tags":["git","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}},{"node":{"excerpt":"對電腦下指令，CLI 是一種操縱電腦的方法，不像 GUI 圖形使用者介面可點擊，是用文字形式 有些功能只能用 Command Line 操作程式，且比較快 Git、執行 JS 連結 server 會用到（沒有畫面） 指令 名稱 功能 pwd Print Working…","fields":{"slug":"/Lidemy/版本控制 - CLI 基礎及 Git 指令/"},"frontmatter":{"date":"Jun 05, 2020","title":"[第一週] Command Line 及 git 指令","tags":["git","Lidemy"],"category":"程式導師計畫","type":"coding","thumbnail":null}}}]}},"pageContext":{"tag":"Lidemy","tags":["Ashtanga","CSS","Event Loop","GR20","HTML","JavaScript","Kotlin","Lidemy","React","Udemy","git","life","yoga","一週一山","交換生活","台東","嘉明湖","好想工作室","小腳ㄚ","小腳ㄚ初階登山訓練","想知道嗎","打工換宿","政大山隊","旅居","朝聖之路","東莒大浦","泊","溯溪","登山紀錄","筆記","葡萄牙","西班牙","那些年我們去縱走","馬祖","騎行"]}},"staticQueryHashes":["63159454"]}