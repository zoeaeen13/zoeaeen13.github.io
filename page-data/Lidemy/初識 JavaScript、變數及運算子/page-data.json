{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lidemy/初識 JavaScript、變數及運算子/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"8ab463c7-8520-55f5-bd65-ef5f9d665f6e","excerpt":"早期只能用在瀏覽器，透過它去操控畫面上的東西，瀏覽器會提供給 JS 一些方法。JS 不能單獨執行，一定要有一個執行環境存在，目前多數情況不是使用瀏覽器就是用 Node.js： Node.js 並非程式語言，而是一種執行環境（Runtime），是可以讓 JS…","html":"<p>早期只能用在瀏覽器，透過它去操控畫面上的東西，瀏覽器會提供給 JS 一些方法。<strong>JS 不能單獨執行，一定要有一個執行環境存在</strong>，目前多數情況不是使用瀏覽器就是用 Node.js：</p>\n<ul>\n<li>Node.js</li>\n</ul>\n<p>並非程式語言，而是一種執行環境（Runtime），是可以讓 JS 在非瀏覽器的地方運行，這個執行環境會提供 JS 操控需要的方法，和 Chrome 一樣核心使用高速的 V8 JavaScript 引擎，可以運行於一般常見的各種作業系統平台上。</p>\n<p>不同的執行環境（Runtime）會提供不同的功能，或者同樣的方法、但呈現方式不同。</p>\n<hr>\n<blockquote>\n<p><strong>Q: 如何執行 JS 程式</strong></p>\n</blockquote>\n<ol>\n<li>在瀏覽器中執行 JavaScript\n建立一個 .html 檔，撰寫 <code class=\"language-text\">&lt;script&gt;</code>，並於兩標籤之間撰寫 JavaScript 程式碼、嘗試印出東西，開啟瀏覽器執行，可以從開發者工具 -> Console 看到執行結果。</li>\n<li>瀏覽器在碰到 <code class=\"language-text\">&lt;script&gt;</code> 時，會停止文件解析，先執行 <code class=\"language-text\">&lt;script&gt;</code> 間的程式碼 ，如果你的 JS 裡面要操作到 DOM 元素，應該將 <code class=\"language-text\">&lt;script&gt;</code> 標籤放在文件最後執行</li>\n<li>瀏覽器會假設你使用的是 JavaScript 語言，不過你也可以用 HTTP Content-Script-Type 標頭來指定，標頭可以使用 <code class=\"language-text\">&lt;meta&gt;</code> 來摸擬，亦或是可以在 <code class=\"language-text\">&lt;script&gt;</code> 上使用 type 屬性來指定</li>\n<li>可以不寫在 .html 裡面，將 JavaScript 程式專門撰寫在 .js 檔案，再使用 <code class=\"language-text\">&lt;script&gt;</code> 標籤的 src 屬性指定檔案名稱</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"html\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// 方法一： HTTP Content</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">meta</span><span class=\"mtk1\"> </span><span class=\"mtk8\">http-equiv</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Content-Script-Type&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk8\">content</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text/javascript&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">// 方法二：使用 type 屬性來指定</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">script</span><span class=\"mtk1\"> </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text/javascript&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 你的程式碼</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">script</span><span class=\"mtk13\">&gt;</span></span></span></code></pre>\n<ol start=\"2\">\n<li>在 Node.js 環境執行程式</li>\n<li>node 指令 + .js 的檔名</li>\n<li>或是 node 指令進入執行環境（下圖講解）</li>\n</ol>\n<p><img src=\"https://i.imgur.com/QTJ7C4C.png\"></p>\n<br>\n<h3 id=\"Q-如何比較好理解-Runtime？\" style=\"position:relative;\">Q: 如何比較好理解 Runtime？<a href=\"#Q-%E5%A6%82%E4%BD%95%E6%AF%94%E8%BC%83%E5%A5%BD%E7%90%86%E8%A7%A3-Runtime%EF%BC%9F\" aria-label=\"Q 如何比較好理解 Runtime？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>直譯就是運行時間，run（跑、運行）time（時間）是一套比較底層的純 C 語言。在 stackoverflow 上有相關的討論「<a href=\"https://stackoverflow.com/questions/3900549/what-is-runtime\">What is runtuime?</a>」其中一段我認為比較好的解釋：</p>\n<blockquote>\n<p>*Runtime describes software/instructions that are executed while your program is running, especially those instructions that you did not write explicitly, but are necessary for the proper execution of your code.</p>\n<p><em>Runtime，描述軟體程式/指令在你的程式運行的時候是如何執行的，尤其是那些你沒有明確寫出來，卻對於正確執行程式碼是必須的指令。</em></p>\n</blockquote>\n<p>我個人理解成平常我們可能會使用 JavaScript、OC、Python 各種語言，在執行的時候（Runtime）都會轉成電腦看得懂的形式、和電腦進行合作。</p>\n<p>就是像中間的翻譯一樣，我們需要 Runtime Library 來實現程式運行時需要的一切指令，它會對所面對的程式語言，提供其基本<strong>執行時需求</strong>，像是創建類別、屬性方法、支援函式，並與作業系統合作支援例如數學運算、輸入輸出等基本功能。</p>\n<hr>\n<h4 id=\"變數（Variable）\" style=\"position:relative;\">變數（Variable）<a href=\"#%E8%AE%8A%E6%95%B8%EF%BC%88Variable%EF%BC%89\" aria-label=\"變數（Variable） permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>資料(值)的存放角色。和常數不同，想像變數是一個<strong>暫時存放值</strong>的盒子，而盒子是打開的，可以更動或抽換裡面的東西</li>\n<li>\n<p>記住：<strong>宣告變數</strong>和<strong>定義變數</strong>是分開的</p>\n<ul>\n<li>宣告變數：<code class=\"language-text\">var foo</code>、<code class=\"language-text\">let foo</code>、<code class=\"language-text\">const foo</code>，ES6 之後有三種<a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Grammar_and_types\">宣告方式</a>，之前只有定義變數沒有定義常數的方式</li>\n<li>定義變數：<code class=\"language-text\">foo = 1</code>、<code class=\"language-text\">foo = &#39;1&#39;</code>、<code class=\"language-text\">foo = true</code></li>\n<li>定義變數稱為<strong>賦值</strong>，宣告變數時如果沒有賦值的話，預設是 undefined</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"變數的命名規則\" style=\"position:relative;\">變數的命名規則<a href=\"#%E8%AE%8A%E6%95%B8%E7%9A%84%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87\" aria-label=\"變數的命名規則 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n<ul>\n<li>數字不可用於開頭字元</li>\n<li>不可使用 JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Future_reserved_keywords\">保留字</a>，如 var、return 等</li>\n<li>又稱為 identifier，取名稱要有<strong>識別性</strong>，最好讓人一眼判斷這個變數代表什麼、要做什麼事</li>\n</ul>\n<p>命名有很大的學問，可以幫助其他人理解程式碼，參考 <a href=\"https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/var_const_naming.html#%E5%A5%BD%E7%9A%84%E8%AE%8A%E6%95%B8%E5%87%BD%E5%BC%8F%E3%80%81%E9%A1%9E%E5%88%A5%E5%91%BD%E5%90%8D\">好的變數(函式、類別)命名</a></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- 變數和函式 -&gt; 小駝峰式(camelCase)： bookName、cardItem...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">- 類別 -&gt; 巴斯卡(PascalCase)： ItemDecoration、CustomView...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 常見的 Boolean 布林值命名（形容詞）</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">isEmpty、hasBasket、isPass，有是否之意</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 常見的 String 字串命名（名詞）</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">name、description、label、text</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 常用的函式開頭（動詞+名詞）</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">setColor、removeAll、printText、addItem</span></span></span></code></pre>\n<h6 id=\"基本符號\" style=\"position:relative;\">基本符號<a href=\"#%E5%9F%BA%E6%9C%AC%E7%AC%A6%E8%99%9F\" aria-label=\"基本符號 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n<table>\n<thead>\n<tr>\n<th>符號</th>\n<th>名稱</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>（）</td>\n<td>圓括號</td>\n<td>函式呼叫、包括流程敘述、分隔運算的優先順序</td>\n</tr>\n<tr>\n<td>［］</td>\n<td>中括號</td>\n<td>主要用於表示 JavaScript 中的陣列（Array）</td>\n</tr>\n<tr>\n<td>｛｝</td>\n<td>大括號</td>\n<td>區塊，用於程式敘述的區域分隔（函式、迴圈、流程條件），另外也用在物件實字（Object Literals）</td>\n</tr>\n<tr>\n<td>\"\"</td>\n<td>雙引號</td>\n<td>用於字串的宣告</td>\n</tr>\n<tr>\n<td>”</td>\n<td>單引號</td>\n<td>在 JavaScript 中也用於字串的宣告</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"運算子（Operators）\" style=\"position:relative;\">運算子（Operators）<a href=\"#%E9%81%8B%E7%AE%97%E5%AD%90%EF%BC%88Operators%EF%BC%89\" aria-label=\"運算子（Operators） permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n<p>對變數或值進行操作的字元，例如 <code class=\"language-text\">x + y = z</code> 其中的 = 和 + 符號。</p>\n<table>\n<thead>\n<tr>\n<th>符號</th>\n<th>名稱</th>\n<th>定義</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">=</code></td>\n<td>指定運算子（assignment）</td>\n<td>進行「指定、賦值」的工作</td>\n<td><code class=\"language-text\">a = b + 1</code>，就是將 b + 1 的結果放到 a</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">+-*/</code></td>\n<td>算數運算子（math）</td>\n<td>進行加、減、乘、除的運算</td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">+=</code> <code class=\"language-text\">-=</code> <code class=\"language-text\">*=</code> <code class=\"language-text\">/=</code></td>\n<td>複合指定運算子（compound assignment）</td>\n<td>結合算數及指定的性質</td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">++</code>和<code class=\"language-text\">--</code></td>\n<td>遞增運算子（increment/decrement）</td>\n<td>遞增或遞減 1</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>邏輯運算子（logical）</td>\n<td>表達複合條件、設定初始值</td>\n<td>And、Or、Not</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">&gt;</code>、<code class=\"language-text\">&lt;</code>、<code class=\"language-text\">&gt;=</code>和 <code class=\"language-text\">&lt;=</code></td>\n<td>比較運算子（comparison）</td>\n<td>比較結果 -> 布林值</td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">==</code> <code class=\"language-text\">===</code> <code class=\"language-text\">!=</code> <code class=\"language-text\">!==</code></td>\n<td>相等性運算子（equality）</td>\n<td>差異 -> 比較時是否會做強制轉型</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Q: 位元運算好難理解？</p>\n</blockquote>\n<p>5 &#x26; 1 會被看成 0101 &#x26; 0001，得到結果 0001，回傳 1</p>\n<blockquote>\n<p>Q: 關於 a++ 和 ++a 的差異</p>\n</blockquote>\n<ul>\n<li><code class=\"language-text\">a++</code> 執行完整句，才跑 ++</li>\n<li><code class=\"language-text\">++a</code> 先執行完這個 ++，再去執行整句</li>\n</ul>\n<p>參考這篇 <a href=\"https://ithelp.ithome.com.tw/articles/10192800\">i++ 與 ++i可以怎麼理解？</a>，做完練習之後好理解很多，在一般迴圈裡看起來一樣的結果，但是透過表示式就可以看出差別。</p>\n<blockquote>\n<p>Q: 更多運算子介紹？</p>\n</blockquote>\n<ol>\n<li>存取運算子（object property access:）：物件特性，利用 <code class=\"language-text\">.</code> 或 <code class=\"language-text\">[ ]</code> 方式存取物件的特性，記得：存取運算子優先於其他運算子執行！\n例如 <code class=\"language-text\">obj.a</code> 或 <code class=\"language-text\">obj[&#39;a&#39;]</code>，點記號法簡單好使用，但 <code class=\"language-text\">[ ]</code> 卻可在索引值是變數或有特殊字元時能<strong>保證完成值的存取</strong>，例如：<code class=\"language-text\">obj[&#39;h e l l o&#39;]</code>（字串中間有空白）、<code class=\"language-text\">obj[&#39;#$%^&amp;&#39;]</code>（特殊字元）、<code class=\"language-text\">obj[&#39;123&#39;]</code>（開頭為數字時）</li>\n<li>字串運算子（string）：<code class=\"language-text\">+</code> 可串接兩字元並回傳結果，通常用於連接變數與字串。補充：如果數字要轉字串，除了調用函式外，也可以透過這個方式</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 字串運算子</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> A = </span><span class=\"mtk5\">3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> B = A + </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\">     </span><span class=\"mtk3\">//加上一空字串</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(B)     </span><span class=\"mtk3\">//&quot;3&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 字串模板，使用 ${ variable_name } 代入變數</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(${A})  </span><span class=\"mtk3\">//&quot;3&quot;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>三元運算子（conditional / ternary）：又稱條件運算子，接受兩個運算元作為值且一個運算元作為條件。若條件為 true，運算子回傳「A值」，否則回傳「B值」</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//條件?A值:B值</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">condition ? A(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">) : B(</span><span class=\"mtk4\">false</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<ol start=\"4\">\n<li>一元運算子（unary）：只需要一個運算元的運算，例如邏輯否（<code class=\"language-text\">!</code>）、遞增遞減（<code class=\"language-text\">++</code>/<code class=\"language-text\">--</code>）和 typeof 等等都是屬於一元運算子，可以參考這篇 <a href=\"https://scotch.io/tutorials/javascript-unary-operators-simple-and-useful#toc-summary-of-all-unary-operators\">JavaScript Unary Operators: Simple and Useful</a></li>\n<li>關係運算子（relational）：比較兩運算元，並根據比較結果回傳布林值。例如 <code class=\"language-text\">in</code> 運算子可得知特定屬性是否存在於物件中</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> product = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  name: </span><span class=\"mtk11\">&#39;apple&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  price: </span><span class=\"mtk5\">100</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> product; </span><span class=\"mtk3\">// true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">&#39;date&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">in</span><span class=\"mtk1\"> product; </span><span class=\"mtk3\">// false</span></span></span></code></pre>\n<blockquote>\n<p>Q: 至於以上運算子的執行優先順序，可參考<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#Table\">資料</a></p>\n</blockquote>\n<h4 id=\"參考資料：\" style=\"position:relative;\">參考資料：<a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\" aria-label=\"參考資料： permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/3900549/what-is-runtime\">What is “runtime”?</a></li>\n<li><a href=\"https://www.struggle3g.com/2018/09/07/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BARuntime%20(%E4%B8%80)%20%E4%BB%80%E4%B9%88%E6%98%AFRuntime%EF%BC%9F%20%E5%AE%9A%E4%B9%89%EF%BC%9F/\">深入淺出Runtime (一) 什么是Runtime？ 定义？</a></li>\n<li><a href=\"https://www.zhihu.com/question/20607178\">運行時（runtime）是什么意思？應該怎樣深入且直觀地理解？</a></li>\n<li><a href=\"https://openhome.cc/Gossip/JavaScript/ScriptTag.html\">script 標籤</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators#%E4%B8%80%E5%85%83%E9%81%8B%E7%AE%97%E5%AD%90\">運算式與運算子</a></li>\n</ol>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk13 { color: #808080; }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk8 { color: #9CDCFE; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .mtk5 { color: #B5CEA8; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#q-%E5%A6%82%E4%BD%95%E6%AF%94%E8%BC%83%E5%A5%BD%E7%90%86%E8%A7%A3-runtime%EF%BC%9F\">Q: 如何比較好理解 Runtime？</a></p>\n<ul>\n<li>\n<p><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#%E8%AE%8A%E6%95%B8%EF%BC%88variable%EF%BC%89\">變數（Variable）</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#%E8%AE%8A%E6%95%B8%E7%9A%84%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87\">變數的命名規則</a></li>\n<li><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#%E5%9F%BA%E6%9C%AC%E7%AC%A6%E8%99%9F\">基本符號</a></li>\n<li><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#%E9%81%8B%E7%AE%97%E5%AD%90%EF%BC%88operators%EF%BC%89\">運算子（Operators）</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Lidemy/%E5%88%9D%E8%AD%98%20JavaScript%E3%80%81%E8%AE%8A%E6%95%B8%E5%8F%8A%E9%81%8B%E7%AE%97%E5%AD%90/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\">參考資料：</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[第二週] 初識 JavaScript","type":"coding","date":"Jul 03, 2020","tags":["JavaScript","Lidemy"],"category":"程式導師計畫","log":null,"thumbnail":null}}},"pageContext":{"slug":"/Lidemy/初識 JavaScript、變數及運算子/","previous":{"fields":{"slug":"/Lidemy/Git 遠端協作及 Pull Request 介紹/"},"frontmatter":{"title":"[第一週] Git 協作及 Pull Request 介紹","tags":["git","Lidemy"],"date":"2020-06-06","category":"程式導師計畫","mark":null,"description":"發 PR 流程及遠端協作關係","log":null}},"next":{"fields":{"slug":"/Lidemy/認識 JS 變數/"},"frontmatter":{"title":"[第二週] 認識 JS 型別","tags":["JavaScript","Lidemy"],"date":"2020-07-05","category":"程式導師計畫","mark":null,"description":"Primitive type（基本型別）和 Object types（物件型別）","log":null}}}},"staticQueryHashes":["63159454"]}