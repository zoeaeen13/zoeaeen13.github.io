{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lidemy/display 的差別/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"350789da-e64e-50ed-9fda-b843b1101962","excerpt":"display 這個屬性，是用來定義標籤們的顯示方式，每一個 html 元素都會有一個預設的 display 屬性，inline 或 block，可以透過 CSS 來改變元素預設的顯示方式，進而達到排版目的。 常見的顯示方式有兩種： Block 區塊元素 常見元素標籤：div…","html":"<p>display 這個屬性，是用來定義標籤們的<strong>顯示方式</strong>，每一個 html 元素都會有一個預設的 display 屬性，inline 或 block，可以透過 CSS 來改變元素預設的顯示方式，進而達到排版目的。</p>\n<p>常見的顯示方式有兩種：</p>\n<blockquote>\n<p>Block 區塊元素</p>\n</blockquote>\n<ul>\n<li>常見元素標籤：div、ul li、p、h1</li>\n<li>寬度預設撐到最大，占滿整行容器</li>\n<li>下個元素會換行呈現，並不會並排</li>\n<li>水平置中方法：margin : 0 auto</li>\n</ul>\n<blockquote>\n<p>Inline 行內元素</p>\n</blockquote>\n<ul>\n<li>常見元素標籤：span、a、imput、img</li>\n<li>元素連在一起會在同一行，<strong>不會換行</strong>，圖片或文字均不換行</li>\n<li><strong>不可設定長寬</strong>，僅依照內容大小顯示</li>\n<li>很多資料會寫到 margin/padding 不能設定，事實上是指排版不會隨著設定而有所改變，寬高都是依照元素本身大小，但可以設置 margin-left、margin-right、padding-left、padding-right</li>\n<li>水平置中方法：加上 text-align : center</li>\n<li>備註： inline 元素不該包住 block 元素</li>\n</ul>\n<p><img src=\"https://i.imgur.com/WFByAR7.png\"></p>\n<hr>\n<p>除了預設，當然可以透過 CSS 去改變顯示方式，我們常用的 display 方式還有 none 和 inline-block：</p>\n<blockquote>\n<p>display: none</p>\n</blockquote>\n<p>設定成 none，表示不顯示該元素，<code class=\"language-text\">display: none</code> 和 <code class=\"language-text\">visibility: hidden</code> 的差別在於 none 會讓這個東西完全不見，不佔空間，而 <code class=\"language-text\">visibility : hidden</code> 只是隱形，實際上還是佔據排版空間</p>\n<blockquote>\n<p>display: inline-block</p>\n</blockquote>\n<p>inline-block 的作用，就是為了整和名稱裡兩屬性的優缺點。有時候我們不需要占滿整行的元素、想讓它並排，同時又希望它可以設定 Box Model 的狀態，這時候就可以用上 inline-block：</p>\n<ul>\n<li>外面用 inline 呈現，裡面是 block 屬性</li>\n<li>意思是可以並排，可以設定元素的寬高/外距/內距</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","tableOfContents":"","frontmatter":{"title":"[第六週] 了解 inline, block 跟 inline-block 的差別","type":"coding","date":"Aug 21, 2020","tags":["CSS","Lidemy"],"category":"程式導師計畫","log":null,"thumbnail":null}}},"pageContext":{"slug":"/Lidemy/display 的差別/","previous":{"fields":{"slug":"/Matzu/D14/"},"frontmatter":{"title":"大浦日記 D9 — 機車環島","tags":["旅居","馬祖","東莒大浦","交換生活"],"date":"2020-08-18","category":"旅行日記","mark":null,"description":null,"log":null}},"next":{"fields":{"slug":"/Lidemy/flexbox/"},"frontmatter":{"title":"[第六週] 認識 CSS 的 flexbox 排版","tags":["CSS","Lidemy"],"date":"2020-08-22","category":"程式導師計畫","mark":null,"description":"一種新的布局方式，是為了適應不同螢幕和設備尺寸而誕生的佈局模式","log":null}}}},"staticQueryHashes":["63159454"]}