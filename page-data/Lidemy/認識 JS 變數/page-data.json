{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lidemy/認識 JS 變數/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"606faf49-98f8-5de4-bc07-daca2147442e","excerpt":"變數沒有型別，值才有 JavaScript 型別的資訊只在值或物件本身，變數只用來作為取得值或物件的參考。型態主要有兩種，分成 Primitive type（基本型別）和 Object types（物件型別）。 一、Primitive type 基本型別 內建型別（Built…","html":"<blockquote>\n<p><strong>變數沒有型別，值才有</strong></p>\n</blockquote>\n<p>JavaScript 型別的資訊只在值或物件本身，變數只用來作為取得值或物件的參考。型態主要有兩種，分成 Primitive type（基本型別）和 Object types（物件型別）。</p>\n<hr>\n<h5 id=\"一、Primitive-type-基本型別\" style=\"position:relative;\">一、Primitive type 基本型別<a href=\"#%E4%B8%80%E3%80%81Primitive-type-%E5%9F%BA%E6%9C%AC%E5%9E%8B%E5%88%A5\" aria-label=\"一、Primitive type 基本型別 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>內建型別（Built-in Types），只是一個值、並不是物件（物件是名稱 + 值的組合），Primitive 具有不可變的特性，分為以下幾種</p>\n<table>\n<thead>\n<tr>\n<th>型別</th>\n<th>名稱</th>\n<th>用意</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>還不存在</td>\n<td>這是 JavaScript 給所有變數的初始值，還沒變數定義</td>\n</tr>\n<tr>\n<td>null</td>\n<td>其東西不存在</td>\n<td>指一個不存在的或無效的物件（object），可以使用 null，不是使用 undefined</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>布林值</td>\n<td>true 和 false 其中一個可能</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>數字型別</td>\n<td>JS 只有一種數值型態，就是 number，除了整數和小數字外，特殊數字有 Infinity（無限大）、 -Infinity（負無限大），以及 NaN（不是數值，Not a Number）</td>\n</tr>\n<tr>\n<td>String</td>\n<td>字串</td>\n<td>代表文字資料</td>\n</tr>\n<tr>\n<td>symbol</td>\n<td>符號</td>\n<td>被使用在 ES6 或 ECMAScript 6，還在建造中，沒被全部瀏覽器支援</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"二、Object-types\" style=\"position:relative;\">二、Object types<a href=\"#%E4%BA%8C%E3%80%81Object-types\" aria-label=\"二、Object types permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>物件型別，物件與其子型別（subtype），例如：物件、陣列、函式等等，物件可以看作是一個用來裝數值的容器：</p>\n<ul>\n<li>Object 物件</li>\n<li>Array 陣列</li>\n<li>Function 函式</li>\n<li>Date 日期時間</li>\n<li>RegExp 正規表述式</li>\n</ul>\n<p>Array 使用數值化「索引」來儲存值，而非如 Object 是使用屬性來儲存值。Function 函式是指一段程式碼片段，可藉由呼叫其名稱來執行它，可簡化重複進行的工作、包裝特定功能的程式碼。</p>\n<hr>\n<blockquote>\n<h5 id=\"Primitive-type-和-Object-type-大不同\" style=\"position:relative;\">Primitive type 和 Object type 大不同<a href=\"#Primitive-type-%E5%92%8C-Object-type-%E5%A4%A7%E4%B8%8D%E5%90%8C\" aria-label=\"Primitive type 和 Object type 大不同 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n</blockquote>\n<ol>\n<li><strong>Immutable 特性</strong></li>\n</ol>\n<p>在 Primitive Type 它是會回傳一個新的，而不是改變它自己，在對 String 做操作的時候要特別注意這些型別的內建函式</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> str = </span><span class=\"mtk11\">&#39;hello&#39;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">str.toUpperCase();   </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(str);    </span><span class=\"mtk3\">// hello</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> arr = [</span><span class=\"mtk5\">1</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">arr.push(</span><span class=\"mtk5\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(arr);    </span><span class=\"mtk3\">// [1, 2]</span></span></span></code></pre>\n<ol start=\"2\">\n<li><strong>賦值的陷阱</strong></li>\n</ol>\n<p>Primitive Type 存的是值，Object 會先給定一記憶體位置，再去讀取裡面的值</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> obj = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    number: </span><span class=\"mtk5\">10</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> obj2 = obj;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(obj, obj2);  </span><span class=\"mtk3\">// 10, 10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">obj2.number = </span><span class=\"mtk5\">20</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(obj, obj2)   </span><span class=\"mtk3\">// 20, 20</span></span></span></code></pre>\n<p>要搞清楚重新賦值 <code class=\"language-text\">=</code>和 <code class=\"language-text\">.</code> 的差別</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> obj = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    number: </span><span class=\"mtk5\">10</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> obj2 = obj;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(obj, obj2);  </span><span class=\"mtk3\">// 10, 10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 先給 [30] 一個位置，再把 obj2 換掉記憶體位置，所以兩者指的是不同的位置</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">obj2 = [</span><span class=\"mtk5\">30</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(obj, obj2)   </span><span class=\"mtk3\">// 10, 30</span></span></span></code></pre>\n<h5 id=\"資料型別轉換\" style=\"position:relative;\">資料型別轉換<a href=\"#%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B\" aria-label=\"資料型別轉換 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>可以使用 <code class=\"language-text\">typeof</code> 來檢測值的資料型別為何</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;Hello World!&#39;</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;string&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">true</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;boolean&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk5\">1234567</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;number&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">null</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;object&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;undefined&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> { name: </span><span class=\"mtk11\">&#39;Jack&#39;</span><span class=\"mtk1\"> }; </span><span class=\"mtk3\">// &#39;object&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> Symbol(); </span><span class=\"mtk3\">// &#39;symbol&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">function</span><span class=\"mtk1\">() {}; </span><span class=\"mtk3\">// &#39;function&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> [</span><span class=\"mtk5\">1</span><span class=\"mtk1\">, </span><span class=\"mtk5\">2</span><span class=\"mtk1\">, </span><span class=\"mtk5\">3</span><span class=\"mtk1\">]; </span><span class=\"mtk3\">// &#39;object&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">NaN</span><span class=\"mtk1\">; </span><span class=\"mtk3\">// &#39;number&#39;</span></span></span></code></pre>\n<h5 id=\"Q-更多-typeof-使用情境？\" style=\"position:relative;\">Q: 更多 typeof 使用情境？<a href=\"#Q-%E6%9B%B4%E5%A4%9A-typeof-%E4%BD%BF%E7%94%A8%E6%83%85%E5%A2%83%EF%BC%9F\" aria-label=\"Q 更多 typeof 使用情境？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>有時候會被拿來檢查：變數有沒有被使用到</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> a !== </span><span class=\"mtk11\">&#39;undefined&#39;</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(a);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<h5 id=\"Q-null-為什麼是-object？它是基本型別嗎？\" style=\"position:relative;\">Q: null 為什麼是 object？它是基本型別嗎？<a href=\"#Q-null-%E7%82%BA%E4%BB%80%E9%BA%BC%E6%98%AF-object%EF%BC%9F%E5%AE%83%E6%98%AF%E5%9F%BA%E6%9C%AC%E5%9E%8B%E5%88%A5%E5%97%8E%EF%BC%9F\" aria-label=\"Q null 為什麼是 object？它是基本型別嗎？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>null 是基本型別之一，但 typeof null 卻得到 object，而非 null！這可說是一個 bug</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">null</span><span class=\"mtk1\">         </span><span class=\"mtk3\">// object (bug in ECMAScript, should be null)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">typeof</span><span class=\"mtk1\"> </span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">    </span><span class=\"mtk3\">// undefined</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">null</span><span class=\"mtk1\"> === </span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">  </span><span class=\"mtk3\">// false  ( === 會判斷類型)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">null</span><span class=\"mtk1\"> == </span><span class=\"mtk4\">undefined</span><span class=\"mtk1\">   </span><span class=\"mtk3\">// true   ( == 會執行類型轉換)</span></span></span></code></pre>\n<h5 id=\"Q-function-是物件的子型別，但-typeof-function--是得到-function-而非-object？\" style=\"position:relative;\">Q: function 是物件的子型別，但 typeof <code class=\"language-text\">function() {}</code> 是得到 function 而非 object？<a href=\"#Q-function-%E6%98%AF%E7%89%A9%E4%BB%B6%E7%9A%84%E5%AD%90%E5%9E%8B%E5%88%A5%EF%BC%8C%E4%BD%86-typeof-function--%E6%98%AF%E5%BE%97%E5%88%B0-function-%E8%80%8C%E9%9D%9E-object%EF%BC%9F\" aria-label=\"Q function 是物件的子型別，但 typeof function  是得到 function 而非 object？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>和陣列依舊得到 object 不一樣，在 JavaScript 覺得 function 太特別了，所以另外給它獨有的回傳值。</p>\n<h5 id=\"Q-怎麼檢測陣列？\" style=\"position:relative;\">Q: 怎麼檢測陣列？<a href=\"#Q-%E6%80%8E%E9%BA%BC%E6%AA%A2%E6%B8%AC%E9%99%A3%E5%88%97%EF%BC%9F\" aria-label=\"Q 怎麼檢測陣列？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Array.isArray(H)  </span><span class=\"mtk3\">//判斷H是不是Array</span></span></span></code></pre>\n<h5 id=\"Q-NaN-表示是無效的數字，但依舊還是-number？\" style=\"position:relative;\">Q: NaN 表示是無效的數字，但依舊還是 number？<a href=\"#Q-NaN-%E8%A1%A8%E7%A4%BA%E6%98%AF%E7%84%A1%E6%95%88%E7%9A%84%E6%95%B8%E5%AD%97%EF%BC%8C%E4%BD%86%E4%BE%9D%E8%88%8A%E9%82%84%E6%98%AF-number%EF%BC%9F\" aria-label=\"Q NaN 表示是無效的數字，但依舊還是 number？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>NaN 在 JavaScript 當中是個有趣的存在，字面上來說它不是個數字，但你若用 typeof 運算子來判斷型態，它又會告訴你這是個 number。</p>\n<p>不要被字面上的意思「不是數字」（not a number）給弄糊塗了，它依然是數字。另外 NaN 與任何數字運算都會得到 NaN，並且 NaN 不大於、不小於也不等於任何數字，包含 NaN 它自己。</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">var</span><span class=\"mtk1\"> a = Number(</span><span class=\"mtk11\">&#39;hello&#39;</span><span class=\"mtk1\">);  </span><span class=\"mtk3\">// 沒辦法轉，會變成 NaN</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(a === a)      </span><span class=\"mtk3\">// NaN</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">console.log(isNaN(a))     </span><span class=\"mtk3\">// true，可以用 isNaN() 方法來檢測</span></span></span></code></pre>\n<h5 id=\"Q-到底-undefined-和-not-defined-差在哪？\" style=\"position:relative;\">Q: 到底 undefined 和 not defined 差在哪？<a href=\"#Q-%E5%88%B0%E5%BA%95-undefined-%E5%92%8C-not-defined-%E5%B7%AE%E5%9C%A8%E5%93%AA%EF%BC%9F\" aria-label=\"Q 到底 undefined 和 not defined 差在哪？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>在 console 時偶爾會遇到這兩種值，完全是不同的意義</p>\n<ul>\n<li>undefined → 有宣告這個變數，但沒有定義所以沒有設定值</li>\n<li>not defined → 無法參照，代表錯誤，沒有這個變數存在</li>\n</ul>\n<h5 id=\"Q-其他的檢測方式？\" style=\"position:relative;\">Q: 其他的檢測方式？<a href=\"#Q-%E5%85%B6%E4%BB%96%E7%9A%84%E6%AA%A2%E6%B8%AC%E6%96%B9%E5%BC%8F%EF%BC%9F\" aria-label=\"Q 其他的檢測方式？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"js\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">object.prototype.toString.call(要檢測的東西)</span></span></span></code></pre>\n<ul>\n<li>檢測網站：<a href=\"https://dorey.github.io/JavaScript-Equality-Table/\">https://dorey.github.io/JavaScript-Equality-Table/</a></li>\n</ul>\n<h5 id=\"Q-為什麼永遠都用--？\" style=\"position:relative;\">Q: 為什麼永遠都用 === ？<a href=\"#Q-%E7%82%BA%E4%BB%80%E9%BA%BC%E6%B0%B8%E9%81%A0%E9%83%BD%E7%94%A8--%EF%BC%9F\" aria-label=\"Q 為什麼永遠都用  ？ permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>因為 <code class=\"language-text\">==</code> 會涉及型態轉換，所以最好的方式就是都用 <code class=\"language-text\">===</code></p>\n<p>而 <code class=\"language-text\">===</code> 永遠只有在兩者<strong>指向同一個記憶體位置</strong>時才會成立，它並不是在比較兩個的值，是比較他們的位置，這也是為什麼 <code class=\"language-text\">console.loe([] === [])</code> 會是 <strong>FALSE</strong> 的原因，因為他們實際上是存到不同的記憶體位置</p>\n<h2 id=\"參考資料：\" style=\"position:relative;\">參考資料：<a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\" aria-label=\"參考資料： permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://medium.com/@jobboy0101/js%E5%9F%BA%E7%A4%8E-primitive-type-v-s-object-types-f88f7c16f225\">JS基礎：Primitive type v.s Object types</a></li>\n<li><a href=\"https://dotblogs.com.tw/susan_code/2017/07/06/162049\">JavaScript ：Primitive Types 純值(基本型別)介紹</a></li>\n<li><a href=\"https://cythilya.github.io/2018/10/11/types/\">你懂 JavaScript 嗎？#4 型別（Types）</a></li>\n<li><a href=\"https://eyesofkids.gitbooks.io/javascript-start-from-es6/content/part3/datatype.html\">資料類型(值)</a></li>\n</ol>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .mtk5 { color: #B5CEA8; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#%E4%B8%80%E3%80%81primitive-type-%E5%9F%BA%E6%9C%AC%E5%9E%8B%E5%88%A5\">一、Primitive type 基本型別</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#%E4%BA%8C%E3%80%81object-types\">二、Object types</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#%E8%B3%87%E6%96%99%E5%9E%8B%E5%88%A5%E8%BD%89%E6%8F%9B\">資料型別轉換</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-%E6%9B%B4%E5%A4%9A-typeof-%E4%BD%BF%E7%94%A8%E6%83%85%E5%A2%83%EF%BC%9F\">Q: 更多 typeof 使用情境？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-null-%E7%82%BA%E4%BB%80%E9%BA%BC%E6%98%AF-object%EF%BC%9F%E5%AE%83%E6%98%AF%E5%9F%BA%E6%9C%AC%E5%9E%8B%E5%88%A5%E5%97%8E%EF%BC%9F\">Q: null 為什麼是 object？它是基本型別嗎？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-function-%E6%98%AF%E7%89%A9%E4%BB%B6%E7%9A%84%E5%AD%90%E5%9E%8B%E5%88%A5%EF%BC%8C%E4%BD%86-typeof-function--%E6%98%AF%E5%BE%97%E5%88%B0-function-%E8%80%8C%E9%9D%9E-object%EF%BC%9F\">Q: function 是物件的子型別，但 typeof <code class=\"language-text\">function() {}</code> 是得到 function 而非 object？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-%E6%80%8E%E9%BA%BC%E6%AA%A2%E6%B8%AC%E9%99%A3%E5%88%97%EF%BC%9F\">Q: 怎麼檢測陣列？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-nan-%E8%A1%A8%E7%A4%BA%E6%98%AF%E7%84%A1%E6%95%88%E7%9A%84%E6%95%B8%E5%AD%97%EF%BC%8C%E4%BD%86%E4%BE%9D%E8%88%8A%E9%82%84%E6%98%AF-number%EF%BC%9F\">Q: NaN 表示是無效的數字，但依舊還是 number？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-%E5%88%B0%E5%BA%95-undefined-%E5%92%8C-not-defined-%E5%B7%AE%E5%9C%A8%E5%93%AA%EF%BC%9F\">Q: 到底 undefined 和 not defined 差在哪？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-%E5%85%B6%E4%BB%96%E7%9A%84%E6%AA%A2%E6%B8%AC%E6%96%B9%E5%BC%8F%EF%BC%9F\">Q: 其他的檢測方式？</a></li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#q-%E7%82%BA%E4%BB%80%E9%BA%BC%E6%B0%B8%E9%81%A0%E9%83%BD%E7%94%A8--%EF%BC%9F\">Q: 為什麼永遠都用 === ？</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Lidemy/%E8%AA%8D%E8%AD%98%20JS%20%E8%AE%8A%E6%95%B8/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\">參考資料：</a></li>\n</ul>","frontmatter":{"title":"[第二週] 認識 JS 型別","type":"coding","date":"Jul 05, 2020","tags":["JavaScript","Lidemy"],"category":"程式導師計畫","log":null,"thumbnail":null}}},"pageContext":{"slug":"/Lidemy/認識 JS 變數/","previous":{"fields":{"slug":"/Lidemy/初識 JavaScript、變數及運算子/"},"frontmatter":{"title":"[第二週] 初識 JavaScript","tags":["JavaScript","Lidemy"],"date":"2020-07-03","category":"程式導師計畫","mark":null,"description":"JavaScript 基本觀念、變數及運算子","log":null}},"next":{"fields":{"slug":"/kotlin/Restful API 是啥？有什麼不一樣？/"},"frontmatter":{"title":"[第四週] 認識 HTTP 協定及 Restful API","tags":["Lidemy","API"],"date":"2020-07-15","category":"程式導師計畫","mark":null,"description":"認識 API、HTTP 協定和方法","log":null}}}},"staticQueryHashes":["63159454"]}