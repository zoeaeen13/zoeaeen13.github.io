{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lidemy/雜湊跟加密的差別在哪裡，為什麼密碼要雜湊過後才存入資料庫/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"d58e43f3-84d0-5a86-8fb3-b1592dbcba5e","excerpt":"加密（Encryption） 將明文資訊改變為難以讀取的密文內容，讓人不可讀取。只有擁有解密方法的人，經由解密過程才能將它還原為正常內容，可以將重要資料保護起來，不讓其他人看到。 加密內容是可逆的 有鑰匙（Key）就可以解密讀取 AES…","html":"<blockquote>\n<h3 id=\"加密（Encryption）\" style=\"position:relative;\">加密（Encryption）<a href=\"#%E5%8A%A0%E5%AF%86%EF%BC%88Encryption%EF%BC%89\" aria-label=\"加密（Encryption） permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n</blockquote>\n<p>將明文資訊改變為難以讀取的密文內容，讓人不可讀取。只有擁有解密方法的人，經由解密過程才能將它還原為正常內容，可以將重要資料保護起來，不讓其他人看到。</p>\n<ul>\n<li>加密內容是可逆的</li>\n<li>有鑰匙（Key）就可以解密讀取</li>\n</ul>\n<h4 id=\"AES\" style=\"position:relative;\">AES<a href=\"#AES\" aria-label=\"AES permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>常見的對稱加密演算法，所謂的「對稱」就是說加密解密都是用同一個 key，AES 有超過 10³⁸ 種 key 值，安全性高、不易破解，加密速度快。缺點是<strong>雙方必須先說好密碼是什麼</strong>，因為只要一透過網路傳送，這些資訊就有可能被中間人拿走。</p>\n<h4 id=\"RSA\" style=\"position:relative;\">RSA<a href=\"#RSA\" aria-label=\"RSA permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>常見的非對稱加密法（Asymmetric Encryption），產生一組兩個 Key，分別叫公鑰跟私鑰，用公鑰加密的內容只能用私鑰解。</p>\n<p>然而，並不是所有的資料都需要經由加解密來處理，有些資料其實不應該被還原，就像密碼，只需要經由一道程序驗證它是正確的即可，意思是，我們目的只是確認資料的特徵，而不是拿到全部資料，僅需判斷兩者內容相同即可。</p>\n<ul>\n<li>提供檔案的摘要（Digest），不需全部的檔案，確認在傳送過程中沒有被任何人改過</li>\n<li>相同的摘要計算程序，就可以拿到相同的摘要值</li>\n</ul>\n<blockquote>\n<h3 id=\"雜湊（Hashing）\" style=\"position:relative;\">雜湊（Hashing）<a href=\"#%E9%9B%9C%E6%B9%8A%EF%BC%88Hashing%EF%BC%89\" aria-label=\"雜湊（Hashing） permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n</blockquote>\n<p>而雜湊，就是一個由資料本身計算出摘要的技術，它輸出的資料只能證明在計算當下，針對輸入資料本身所得到的特徵。\n一般使用上，我們會<strong>將密碼變成雜湊存在資料庫</strong>，之後使用者輸入相同內容時，只要用同一計算方式重新跑一遍，驗證兩者，若得到同樣結果則表示資料沒有被改動過，而資料本身（也就是真實的密碼）不會被洩漏，就算整包資料庫被偷走，也因為只知道部分特徵，其他人無法還原回去資料本體。</p>\n<ul>\n<li>無論原文的內容長短，透過雜湊演算法運算完的輸出會是固定長度</li>\n<li>即便只差一個字，雜湊演算法產生的兩個輸出內容卻會差非常多</li>\n<li>檔案內容不同就會計算出不同的 hash value</li>\n<li>不同內容的輸入，得到相同的 hash value 機率極低</li>\n<li>不需密鑰，也無法逆向解出原本輸入</li>\n<li>要使用較高強度的 SHA-2 系列與 SHA-3 系列的雜湊演算法</li>\n</ul>\n<blockquote>\n<p>雖然無法得到資料本體，但就驗證資料正確性而言，仍然有很多研究在於如何讓雜湊演算法在不同資料上產生相同的摘要，這個現象稱為碰撞（Collision），目前 MD4, MD5, SHA1 這些已經被研究出碰撞的方法，原則上不能再使用</p>\n</blockquote>\n<p>雜湊（Hash）是將目標文字轉換成具有相同長度的、不可逆的雜湊字串（或叫做訊息摘要），而加密（Encrypt）是將目標文字轉換成具有不同長度的、可逆的密文，很容易被人搞混的原因，主要是因為雜湊和加密通常是一起搭配使用，他們都是為了保護資料而設計。</p>\n<h3 id=\"參考資料\" style=\"position:relative;\">參考資料<a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\" aria-label=\"參考資料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><a href=\"https://blog.m157q.tw/posts/2017/12/25/differences-between-encryption-and-hashing/\">加密和雜湊有什麼不一樣？</a></li>\n<li><a href=\"https://medium.com/starbugs/what-are-encoding-encrypt-and-hashing-4b03d40e7b0c\">一次搞懂密碼學中的三兄弟 — Encode、Encrypt 跟 Hash</a></li>\n<li><a href=\"https://dotblogs.com.tw/regionbbs/2017/09/21/hashing_is_not_encryption\">雜湊不是加密</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n</style>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/Lidemy/%E9%9B%9C%E6%B9%8A%E8%B7%9F%E5%8A%A0%E5%AF%86%E7%9A%84%E5%B7%AE%E5%88%A5%E5%9C%A8%E5%93%AA%E8%A3%A1%EF%BC%8C%E7%82%BA%E4%BB%80%E9%BA%BC%E5%AF%86%E7%A2%BC%E8%A6%81%E9%9B%9C%E6%B9%8A%E9%81%8E%E5%BE%8C%E6%89%8D%E5%AD%98%E5%85%A5%E8%B3%87%E6%96%99%E5%BA%AB/#aes\">AES</a></li>\n<li><a href=\"/Lidemy/%E9%9B%9C%E6%B9%8A%E8%B7%9F%E5%8A%A0%E5%AF%86%E7%9A%84%E5%B7%AE%E5%88%A5%E5%9C%A8%E5%93%AA%E8%A3%A1%EF%BC%8C%E7%82%BA%E4%BB%80%E9%BA%BC%E5%AF%86%E7%A2%BC%E8%A6%81%E9%9B%9C%E6%B9%8A%E9%81%8E%E5%BE%8C%E6%89%8D%E5%AD%98%E5%85%A5%E8%B3%87%E6%96%99%E5%BA%AB/#rsa\">RSA</a></li>\n</ul>\n</li>\n<li><a href=\"/Lidemy/%E9%9B%9C%E6%B9%8A%E8%B7%9F%E5%8A%A0%E5%AF%86%E7%9A%84%E5%B7%AE%E5%88%A5%E5%9C%A8%E5%93%AA%E8%A3%A1%EF%BC%8C%E7%82%BA%E4%BB%80%E9%BA%BC%E5%AF%86%E7%A2%BC%E8%A6%81%E9%9B%9C%E6%B9%8A%E9%81%8E%E5%BE%8C%E6%89%8D%E5%AD%98%E5%85%A5%E8%B3%87%E6%96%99%E5%BA%AB/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\">參考資料</a></li>\n</ul>","frontmatter":{"title":"為什麼密碼要雜湊過後才存入資料庫？","type":"coding","date":"Oct 11, 2020","tags":["Lidemy"],"category":"程式導師計畫","log":null,"thumbnail":null}}},"pageContext":{"slug":"/Lidemy/雜湊跟加密的差別在哪裡，為什麼密碼要雜湊過後才存入資料庫/","previous":{"fields":{"slug":"/Lidemy/認識 SQL Injection、XSS、CSRF 等攻擊原理及防範方法/"},"frontmatter":{"title":"認識 SQL Injection、XSS、CSRF","tags":["Lidemy"],"date":"2020-10-11","category":"程式導師計畫","mark":null,"description":"了解網頁攻擊原理及其防範方法","log":null}},"next":{"fields":{"slug":"/Lidemy/什麼是 Single Page Application/"},"frontmatter":{"title":"什麼是 Single Page Application","tags":["JavaScript","Lidemy"],"date":"2020-10-11","category":"程式導師計畫","mark":null,"description":"了解 SPA 架構及其優缺點","log":null}}}},"staticQueryHashes":["63159454"]}