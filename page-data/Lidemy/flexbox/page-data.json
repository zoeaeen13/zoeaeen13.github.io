{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lidemy/flexbox/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"8ab5d26c-22b0-5635-b015-2a463bfcf849","excerpt":"相較於塊狀佈局（Block layout）以垂直方向為準、行內佈局（Inline layout）以水平方向為準，這是一種新的布局方式，是為了適應不同螢幕和設備尺寸而誕生的佈局模式： 多數瀏覽器已有支援 flexbox  沒有固定水平、垂直，而是利用主軸（main axis…","html":"<p>相較於塊狀佈局（Block layout）以垂直方向為準、行內佈局（Inline layout）以水平方向為準，這是一種新的布局方式，是為了適應不同螢幕和設備尺寸而誕生的佈局模式：</p>\n<ul>\n<li>多數瀏覽器已有支援 flexbox </li>\n<li>沒有固定水平、垂直，而是利用<strong>主軸</strong>（main axis）和<strong>切軸</strong>（cross axis）的概念</li>\n<li>彈性盒子適用不同的排版演算法，有些屬性在這裡無作用，例如 vertical-align</li>\n<li><strong>動態變更</strong>的能力，更改該項目的長/高，以貼合任何顯示空間，擴張及收縮元素</li>\n</ul>\n<p><img src=\"https://i.imgur.com/GScIb0H.png\"></p>\n<blockquote>\n<p>舉例來說</p>\n<p>flex-direction 是 column，主軸會充當垂直、而切軸則為水平，和我們習慣相似。但參考下圖，它是一個 <code class=\"language-text\">flex-direction: row</code> 的彈性容器，也就是基於主軸作水平排列</p>\n</blockquote>\n<p><img src=\"https://developer.mozilla.org/files/3739/flex_terms.png\"></p>\n<hr>\n<br>\n<br>\n<p>那麼要如何使用 flexbox 來實作排版？</p>\n<h5 id=\"一、設定彈性容器-flex-container\" style=\"position:relative;\">一、設定彈性容器 flex container<a href=\"#%E4%B8%80%E3%80%81%E8%A8%AD%E5%AE%9A%E5%BD%88%E6%80%A7%E5%AE%B9%E5%99%A8-flex-container\" aria-label=\"一、設定彈性容器 flex container permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>首先，需要定義使用 flexbox 的區塊，將包裹住所有元素的父層容器，它的 display 設定成 <code class=\"language-text\">flex</code> 或 <code class=\"language-text\">inline-flex</code>，作為彈性容器 Flex container</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"css\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">display: flex</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">display: </span><span class=\"mtk4\">inline-flex</span><span class=\"mtk1\">  </span><span class=\"mtk3\">/* 能讓父層保有 inline-block 的特性 */</span></span></span></code></pre>\n<p>如此一來，在彈性容器內的所有元素都會變成彈性項目（Flex item），我們可以利用一些屬性設定主軸，對 Flex item 進行排版</p>\n<h5 id=\"二、建立彈性容器的排版規則（外部）\" style=\"position:relative;\">二、建立彈性容器的排版規則（外部）<a href=\"#%E4%BA%8C%E3%80%81%E5%BB%BA%E7%AB%8B%E5%BD%88%E6%80%A7%E5%AE%B9%E5%99%A8%E7%9A%84%E6%8E%92%E7%89%88%E8%A6%8F%E5%89%87%EF%BC%88%E5%A4%96%E9%83%A8%EF%BC%89\" aria-label=\"二、建立彈性容器的排版規則（外部） permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>設定主軸，是跟隨彈性項目順序的軸、而切軸是垂直於主軸的軸</p>\n<ol>\n<li>\n<p><strong>flex-direction：啟用主軸，決定子元件的排序方向</strong></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"css\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">row             </span><span class=\"mtk3\">/* 主軸從左至右（預設） */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">row-reverse</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/* 主軸從右至左 */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">column          </span><span class=\"mtk3\">/* 主軸由上至下 */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">column-reverse</span><span class=\"mtk1\">  </span><span class=\"mtk3\">/* 主軸由下至上 */</span></span></span></code></pre>\n</li>\n<li>\n<p><strong>flex-wrap：決定了子物件是否可以換行</strong></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"css\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">nowrap          </span><span class=\"mtk3\">/* 不換行（預設） */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">wrap            </span><span class=\"mtk3\">/* 為換行 */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">wrap-reverse</span><span class=\"mtk1\">    </span><span class=\"mtk3\">/* 換行且排序方式與 wrap 相反 */</span></span></span></code></pre>\n</li>\n</ol>\n<blockquote>\n<p><strong>小技巧：flex-direction 和 flex-wrap 可以合併簡寫為 flex-flow 屬性</strong></p>\n</blockquote>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"css\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">flex-flow</span><span class=\"mtk1\">: (</span><span class=\"mtk4\">flex-direction</span><span class=\"mtk1\"> value) (</span><span class=\"mtk4\">flex-wrap</span><span class=\"mtk1\"> value)</span></span></span></code></pre>\n<ol start=\"3\">\n<li><strong>justify-content：依據主軸，彈性項目如何擺放</strong>\n它會依照我們設定的主軸方向，去移動子物件的對齊位置，因為排版方式眾多，以網路範例圖來展示，更好理解</li>\n</ol>\n<p><img src=\"https://i.imgur.com/5EACcpY.png\"></p>\n<ol start=\"4\">\n<li>\n<p><strong>align-items：依據切軸的項目如何擺放</strong>\n也就是說，對齊方向與 justify-content 相反。舉例來說，當依照預設 <code class=\"language-text\">flex-direction: row</code> 設定主軸為橫向、副軸為縱向</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"css\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">stretch        </span><span class=\"mtk3\">/* 自動將子元素的高度延展成一樣高度 */</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">flex-start</span><span class=\"mtk1\">     </span><span class=\"mtk3\">/* 靠上*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">flex-end</span><span class=\"mtk1\">       </span><span class=\"mtk3\">/* 靠下*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">center</span><span class=\"mtk1\">         </span><span class=\"mtk3\">/* 垂直置中*/</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">baseline       </span><span class=\"mtk3\">/* 依照基準線對齊*/</span></span></span></code></pre>\n<p>另外還有 align-content 屬性，與 align-items 類似，差別在於它適用於多行元素，如當設置 <code class=\"language-text\">flex-wrap: wrap</code> 時產生的多行元素</p>\n</li>\n<li><strong>設置 gap 屬性：行列的間距</strong></li>\n</ol>\n<p><img src=\"https://i.imgur.com/CPbP4Xd.png\"></p>\n<hr>\n<br>\n<br>\n<p>剛剛講的這些都是外容器，前面提過，彈性盒子有一特別屬性是「動態變更」運用在內容器，更能體現「flex」特性：</p>\n<ol>\n<li>flex-grow：元件的伸展性，空間分配還有剩餘時的當前元件的伸展性。預設是 0，也就是不會縮放</li>\n</ol>\n<p><img src=\"https://i.imgur.com/8ISzDfl.png\"></p>\n<ol start=\"2\">\n<li>flex-shrink：元件的收縮性，空間分配還不足時的當前元件的收縮性</li>\n<li>flex-basis：元件的基準值，可使用不同的單位</li>\n</ol>\n<blockquote>\n<p>筆記：grow、shrink 計算概念 => 填入整數，按比例分配剩餘空間</p>\n</blockquote>\n<ul>\n<li>先將剩餘的空間計算出來，依據比例（flex-grow）</li>\n<li>是分配 剩餘的空間，已經佔用的空間不會重新分配</li>\n</ul>\n<h4 id=\"參考資料：\" style=\"position:relative;\">參考資料：<a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\" aria-label=\"參考資料： permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-TW/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\">MDN CSS 彈性盒子用法</a></li>\n<li><a href=\"https://medium.com/@a0988891318/css-flexbox-%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E6%95%99%E5%AD%B8-5ad3502e4f40\">CSS Flexbox 新手入門教學</a></li>\n<li><a href=\"https://5xruby.tw/posts/flex/\">第一次用 Flex 切版就上手</a></li>\n<li><a href=\"https://wcc723.github.io/css/2020/03/08/flex-size/\">Flex 空間計算規則</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .mtk7 { color: #D7BA7D; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/Lidemy/flexbox/#%E4%B8%80%E3%80%81%E8%A8%AD%E5%AE%9A%E5%BD%88%E6%80%A7%E5%AE%B9%E5%99%A8-flex-container\">一、設定彈性容器 flex container</a></li>\n<li><a href=\"/Lidemy/flexbox/#%E4%BA%8C%E3%80%81%E5%BB%BA%E7%AB%8B%E5%BD%88%E6%80%A7%E5%AE%B9%E5%99%A8%E7%9A%84%E6%8E%92%E7%89%88%E8%A6%8F%E5%89%87%EF%BC%88%E5%A4%96%E9%83%A8%EF%BC%89\">二、建立彈性容器的排版規則（外部）</a></li>\n</ul>\n</li>\n<li><a href=\"/Lidemy/flexbox/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\">參考資料：</a></li>\n</ul>","frontmatter":{"title":"[第六週] 認識 CSS 的 flexbox 排版","type":"coding","date":"Aug 22, 2020","tags":["CSS","Lidemy"],"category":"程式導師計畫","log":null,"thumbnail":null}}},"pageContext":{"slug":"/Lidemy/flexbox/","previous":{"fields":{"slug":"/Lidemy/display 的差別/"},"frontmatter":{"title":"[第六週] 了解 inline, block 跟 inline-block 的差別","tags":["CSS","Lidemy"],"date":"2020-08-21","category":"程式導師計畫","mark":null,"description":"用來定義標籤們的顯示方式，透過 CSS 來改變元素預設的顯示方式，進而達到排版目的","log":null}},"next":{"fields":{"slug":"/Lidemy/position 的差別/"},"frontmatter":{"title":"[第六週] 了解 position: static, relative, absolute 跟 fixed 的差別","tags":["CSS","Lidemy"],"date":"2020-08-23","category":"程式導師計畫","mark":null,"description":"用來指定一個元素的定位方式，透過 top、right、bottom 和 left 特性來「特別定位」元素，是經過計算後得到的位置","log":null}}}},"staticQueryHashes":["63159454"]}