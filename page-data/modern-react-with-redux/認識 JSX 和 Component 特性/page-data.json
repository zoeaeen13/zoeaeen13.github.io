{"componentChunkName":"component---src-templates-blog-post-js","path":"/modern-react-with-redux/認識 JSX 和 Component 特性/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"de870b7f-32b7-5978-b683-2e5439878489","excerpt":"認識 JSX 前面說過元件會回傳 JSX，JSX 不是新的語言，它只是 React 提供的語法糖，開發 React 並不一定要使用 JSX，它只是讓我們能更方便、快速建立 HTML 內容（並非真的在撰寫 HTML），瀏覽器是無法辨識 JSX 的，所以需要經由 babel…","html":"<h4 id=\"認識-JSX\" style=\"position:relative;\">認識 JSX<a href=\"#%E8%AA%8D%E8%AD%98-JSX\" aria-label=\"認識 JSX permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>前面說過元件會回傳 JSX，JSX 不是新的語言，它只是 React 提供的語法糖，開發 React 並不一定要使用 JSX，它只是讓我們能更方便、快速建立 HTML 內容（並非真的在撰寫 HTML），瀏覽器是無法辨識 JSX 的，所以需要經由 babel 轉換成正常的 JavaScript 來執行。</p>\n<p>用 <a href=\"https://babeljs.io/\">https://babeljs.io/</a> 進行測試，可以發現這段 JSX 會被 babel 變成下面的形式</p>\n<p><strong>呼叫 React.createElement 方法</strong></p>\n<ol>\n<li>第一個參數，要創建的元素類型，例如 div、input、img 等等</li>\n<li>第二個參數，object，放入該元素的屬性</li>\n<li>第三個參數，元素裡面要放的內容 text</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// before</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> Button = () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">\t</span><span class=\"mtk4\">return</span><span class=\"mtk1\"> </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">button</span><span class=\"mtk1\"> </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;button&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">submit</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">button</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// after babel</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> Button = () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> React.createElement(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;button&quot;</span><span class=\"mtk1\">,            </span><span class=\"mtk3\">// the type of element</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      { type: </span><span class=\"mtk11\">&quot;button&quot;</span><span class=\"mtk1\"> },  </span><span class=\"mtk3\">// the properties of element</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk11\">&quot;submit&quot;</span><span class=\"mtk1\">             </span><span class=\"mtk3\">// the text to show inside the element</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br />\n<h4 id=\"和-html-的不同\" style=\"position:relative;\">和 html 的不同<a href=\"#%E5%92%8C-html-%E7%9A%84%E4%B8%8D%E5%90%8C\" aria-label=\"和 html 的不同 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ol>\n<li>\n<p><strong>添加樣式的方式</strong></p>\n<ul>\n<li>要寫 inline-style 得使用 <code class=\"language-text\">{{}}</code>，外層括號表示要在 JSX 引入 JavaScript 變量</li>\n<li>內層括號，放 JavsScript 物件</li>\n<li>JSX 內的標籤、名稱等一般字串是用雙引號，對於非 JSX 的變數建議使用單引號</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://i.imgur.com/LinjW1d.png\"></p>\n<ol start=\"2\">\n<li><strong>不要使用 class、for 或某些屬性名稱</strong></li>\n</ol>\n<p>React 會查看元素的一些屬性</p>\n<p>偶爾你可能會在 devTool 看到 <code class=\"language-text\">invalid property</code> 的提醒字樣，這是因為那些字在 JavaScript 中屬於 keyword，像是 class、for 等等，為了避免衝突所以一律使用 <code class=\"language-text\">className</code>、<code class=\"language-text\">htmlFor</code> 及其他 React 建議的文字代替</p>\n<br>\n<ol start=\"3\">\n<li><strong>可以引用 JavsScript 的變量，用 <code class=\"language-text\">{}</code> 包裹起來</strong></li>\n</ol>\n<p>基本上在 JSX 裡面要使用到 JavaScript 變量，就是用 <code class=\"language-text\">{}</code> 來標示，可以放入變數、甚至放執行 function 後的結果</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">function</span><span class=\"mtk1\"> getTime() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">new</span><span class=\"mtk1\"> Date()).toLocaleTimeString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> App = () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk8\">className</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;container&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Current Time:</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">h3</span><span class=\"mtk13\">&gt;</span><span class=\"mtk4\">{</span><span class=\"mtk1\">getTime()</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">h3</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">  // 使用 getTime 執行的結果作為變量</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br/>\n<br/>\n<h4 id=\"component-的三個特性\" style=\"position:relative;\">component 的三個特性<a href=\"#component-%E7%9A%84%E4%B8%89%E5%80%8B%E7%89%B9%E6%80%A7\" aria-label=\"component 的三個特性 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><img src=\"https://i.imgur.com/5cl40K4.png\"></p>\n<blockquote>\n<h6 id=\"Component-Nesting\" style=\"position:relative;\">Component Nesting<a href=\"#Component-Nesting\" aria-label=\"Component Nesting permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n</blockquote>\n<ol>\n<li>將 JSX 拆出來變成一個元件，給予一個好的、有意義的名字</li>\n<li>\n<p>在 <code class=\"language-text\">./component</code> 資料夾底下新建一個檔案來寫，檔名和元件名稱一樣（都以大寫開頭）</p>\n<ul>\n<li>寫好元件，把它 export 出去</li>\n<li>在 import 時，後面不需要加上 .js 或副檔名，webpack 會自動幫你處理這塊\n<img src=\"https://i.imgur.com/eWBbo67.png\"></li>\n<li>不用另外寫 <code class=\"language-text\">{}</code>，在一個元件裡面放另一元件時只需要使用 JSX tag 包起來</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://i.imgur.com/skLnC5o.png\"></p>\n<hr>\n<br>\n<blockquote>\n<h6 id=\"Component-Configurable\" style=\"position:relative;\">Component Configurable<a href=\"#Component-Configurable\" aria-label=\"Component Configurable permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n</blockquote>\n<p>當 <code class=\"language-text\">App</code> 是用來顯示下面的 <code class=\"language-text\">CommentDetail</code>、或說 <code class=\"language-text\">CommentDetail</code> 被崁套在 <code class=\"language-text\">App</code> 時，我們會稱上層是父元件、下層的是子元件，這就是元件的層級架構（Component Hierarchy）。</p>\n<p><img src=\"https://i.imgur.com/jW2r5xx.png\"></p>\n<p>而「<strong>Props(Properties) System</strong>」指的是將 data 從父元件傳遞到子元件的機制，讓子元件的顯示內容和行為可以被父元件決定：</p>\n<ol>\n<li>父元件提供東西給子元件</li>\n</ol>\n<p>跟設定 HTML 屬性很相像，在元件上寫 props 名稱及它對應到的 value，可以自行定義 props 的名稱，像是 <code class=\"language-text\">author=&quot;Sam&quot;</code>、<code class=\"language-text\">author=&quot;Alex&quot;</code></p>\n<p>每個子元件都是獨立存在，有同樣的屬性名稱，但接受到父層傳遞不同 value，並不會跟其他子元件共用，當我們使用 JSX tag 創建子元件時，實際上是創造一個新的 compoenent instance。</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> App = () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">CommentDetail</span><span class=\"mtk1\"> </span><span class=\"mtk8\">author</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Sam&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">CommentDetail</span><span class=\"mtk1\"> </span><span class=\"mtk8\">author</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Alex&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">CommentDetail</span><span class=\"mtk1\"> </span><span class=\"mtk8\">author</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;John&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<ol start=\"2\">\n<li>子元件接收父層的東西</li>\n</ol>\n<p>function component 第一個參數是名為 <code class=\"language-text\">props</code> 的物件，裡面放著從父元件傳遞過來的所有資訊，以 key-value 形式存在，可以直接拿、或是先經過解構</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> CommentDetail = (props) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  console.log(props)  </span><span class=\"mtk3\">// { name: &#39;Sam&#39; }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">p</span><span class=\"mtk1\"> </span><span class=\"mtk8\">class</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;comment__name&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk4\">{</span><span class=\"mtk1\">props.name</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">p</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br>\n<blockquote>\n<h6 id=\"Component-Reusable\" style=\"position:relative;\">Component Reusable<a href=\"#Component-Reusable\" aria-label=\"Component Reusable permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h6>\n</blockquote>\n<p>還有另一個特別的屬性，同樣能傳遞東西給到子元件。</p>\n<p>當今天 component 不是使用 self-closing tag，而是有嵌套其他元素或元件時，它裡面包裹的東西會以「children」屬性存在 props 中，所以我們能利用這項特性，做到抽換內容、讓元件重複使用。</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> ApprovalCard = (props) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk8\">class</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;card__conttent&quot;</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk4\">{</span><span class=\"mtk1\">props.children</span><span class=\"mtk4\">}</span><span class=\"mtk1\">  // 會是 ComponentDetail 這個元件</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">button</span><span class=\"mtk1\"> </span><span class=\"mtk8\">class</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;card__green_btn&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Agree</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">button</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">button</span><span class=\"mtk1\"> </span><span class=\"mtk8\">class</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;card__red_btn&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Reject</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">button</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> App = () </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">ApprovalCard</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">CommentDetail</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">author</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Sam&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">content</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;Nice blog post!&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk8\">avatar</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">faker.image.avatar()</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">ApprovalCard</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>其他參考資料：<a href=\"https://www.cnblogs.com/chenwenhao/p/12548263.html#_label0\">React 和 ReactDOM 的區別</a></p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk13 { color: #808080; }\n  .visual-studio-dark .mtk8 { color: #9CDCFE; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/modern-react-with-redux/%E8%AA%8D%E8%AD%98%20JSX%20%E5%92%8C%20Component%20%E7%89%B9%E6%80%A7/#%E8%AA%8D%E8%AD%98-jsx\">認識 JSX</a></li>\n<li><a href=\"/modern-react-with-redux/%E8%AA%8D%E8%AD%98%20JSX%20%E5%92%8C%20Component%20%E7%89%B9%E6%80%A7/#%E5%92%8C-html-%E7%9A%84%E4%B8%8D%E5%90%8C\">和 html 的不同</a></li>\n<li><a href=\"/modern-react-with-redux/%E8%AA%8D%E8%AD%98%20JSX%20%E5%92%8C%20Component%20%E7%89%B9%E6%80%A7/#component-%E7%9A%84%E4%B8%89%E5%80%8B%E7%89%B9%E6%80%A7\">component 的三個特性</a></li>\n</ul>","frontmatter":{"title":"認識 JSX 和 Component 特性","type":"coding","date":"Jun 14, 2021","tags":["React","Udemy"],"category":"Modern React with Redux","log":"log","thumbnail":null}}},"pageContext":{"slug":"/modern-react-with-redux/認識 JSX 和 Component 特性/","previous":{"fields":{"slug":"/modern-react-with-redux/[筆記] Modern React with Redux：概述/"},"frontmatter":{"title":"[筆記] Modern React with Redux：概述","tags":["React","Udemy"],"date":"2021-06-11","category":"Modern React with Redux","mark":null,"description":"基本觀念、開始建立專案及 React 和 ReactDOM 差別","log":"log"}},"next":{"fields":{"slug":"/modern-react-with-redux/Class Component 和 State System/"},"frontmatter":{"title":"Class Component 和 State System","tags":["React","Udemy"],"date":"2021-06-15","category":"Modern React with Redux","mark":null,"description":"使用 Class Component 的不同、State 的初始化及更新","log":null}}}},"staticQueryHashes":["63159454"]}