{"componentChunkName":"component---src-templates-blog-post-js","path":"/modern-react-with-redux/一些元件設定與事件綁定的技巧/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"3b449675-7e4e-5019-a64f-ce525e851a9b","excerpt":"第六章談到 class component 有生命週期，即繼承 可借用的方法，除了  之外，其他可以自行決定是否要實作，將會在某些特定時機點被 React 觸發。 因為之前已經寫過 React：認識生命週期方法及觸發時間點，這邊會就同樣的部分略過，以紀錄 CH6、CH…","html":"<p>第六章談到 class component 有生命週期，即繼承<code class=\"language-text\">React.Component</code> 可借用的方法，除了 <code class=\"language-text\">render</code> 之外，其他可以自行決定是否要實作，將會在某些特定時機點被 React 觸發。</p>\n<p>因為之前已經寫過 <a href=\"../../Lidemy/React%20Lifecycle%EF%BC%9A%E8%AA%8D%E8%AD%98%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F%E6%96%B9%E6%B3%95%E5%8F%8A%E8%A7%B8%E7%99%BC%E6%99%82%E9%96%93%E9%BB%9E\">React：認識生命週期方法及觸發時間點</a>，這邊會就同樣的部分略過，以紀錄 CH6、CH7 中學到的實作知識為主。</p>\n<hr>\n<br>\n<h5 id=\"不在-constructor-載入資料\" style=\"position:relative;\">不在 constructor 載入資料<a href=\"#%E4%B8%8D%E5%9C%A8-constructor-%E8%BC%89%E5%85%A5%E8%B3%87%E6%96%99\" aria-label=\"不在 constructor 載入資料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>在一開始練習時，將獲取用戶地理位置的程式碼寫在了 contructor 裡，但更好的方式，是讓這些獲得資料的操作放在 <code class=\"language-text\">componentDidMount</code> 統一管理，constructor 只用來設置初始化 state。</p>\n<ul>\n<li><code class=\"language-text\">componentDidMount</code> 第一次渲染到畫面，設定初始 data</li>\n</ul>\n<p><img src=\"https://i.imgur.com/SRmgPlO.png\"></p>\n<hr>\n<br>\n<h5 id=\"初始化狀態的另一寫法\" style=\"position:relative;\">初始化狀態的另一寫法<a href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E7%8B%80%E6%85%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E5%AF%AB%E6%B3%95\" aria-label=\"初始化狀態的另一寫法 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>state 是一個 Javascript 物件，為 class component 管理狀態的地方，前面說過因為是繼承，要先實作 constructor 並呼叫 <code class=\"language-text\">super()</code> 引用父類別設置，不然無法使用 <code class=\"language-text\">this</code> 變數及初始化 <code class=\"language-text\">this.state</code>，不過，其實有另一種簡單的方式可以設定 state。</p>\n<p><strong>就是直接寫</strong></p>\n<p>不需要寫 constructor，卻相當於在 constructor 初始化 this.state</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> App </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  state = { lat: </span><span class=\"mtk4\">null</span><span class=\"mtk1\">, errorMessage: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Latitude:</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>用 create react app 建立，已經引用了 <code class=\"language-text\">@babel/plugin-proposal-class-properties</code> 套件，可以使用這個寫法，因為 babel 自動幫我們實作 constructor，不必再自己定義構造函數、呼叫 super 及處理 props</p>\n<hr>\n<br>\n<h5 id=\"設定-default-props\" style=\"position:relative;\">設定 default props<a href=\"#%E8%A8%AD%E5%AE%9A-default-props\" aria-label=\"設定 default props permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>應該滿常在程式碼中看到這種寫法</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk8\">className</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;loader&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk4\">{</span><span class=\"mtk1\">props.message || </span><span class=\"mtk11\">&#39;Loading...&#39;</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span></code></pre>\n<p>課程介紹除了用 <code class=\"language-text\">||</code> 設置預設值，React 其實有為 component 提供「<strong>defaultProps</strong>」屬性，能使用它來為 props 添加預設值。</p>\n<p>當父元件如果沒有傳對應的 props 進來，自動帶入設定預設的屬性值，不管是 functional 或 class component 都可以加上。</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">const</span><span class=\"mtk1\"> Spinner = props </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk1\"> </span><span class=\"mtk8\">className</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;loader&quot;</span><span class=\"mtk13\">&gt;</span><span class=\"mtk4\">{</span><span class=\"mtk1\">props.message</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Spinner.defaultProps = {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  message: </span><span class=\"mtk11\">&#39;Loading...&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br>\n<h5 id=\"自行設定-renderbody\" style=\"position:relative;\">自行設定 renderbody<a href=\"#%E8%87%AA%E8%A1%8C%E8%A8%AD%E5%AE%9A-renderbody\" aria-label=\"自行設定 renderbody permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>不是什麼技巧，只是增進程式碼的可讀性。</p>\n<p>假設今天要渲染的東西設有多重條件、或判斷多，這種情況下不要把邏輯部份摻在 return 裡面，寫成一個 function，渲染時再呼叫。</p>\n<p>舉例，我有一段 JSX，是根據 page 來決定顯示，以往習慣用三元運算子或 <code class=\"language-text\">&amp;&amp;</code> 進行判斷：</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 按照 currentTab.page 的值渲染對應頁面</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">Tabs</span><span class=\"mtk1\"> </span><span class=\"mtk8\">tabs</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">tabs</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk8\">index</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">currentTab.index</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">{</span><span class=\"mtk1\">currentTab.page === SERVICE_PAGE.CONTENT &amp;&amp; </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">ServiceContent</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">{</span><span class=\"mtk1\">currentTab.page === SERVICE_PAGE.RULES &amp;&amp; </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">Rules</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">{</span><span class=\"mtk1\">currentTab.page === SERVICE_PAGE.MY_PACKAGE &amp;&amp; </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">MyPackage</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">)</span></span></span></code></pre>\n<p>不過，其實能拉出來寫成 function，讓 currentTab.page 以參數傳入，讓整體邏輯拉出來，不會都放在 return 判斷</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">renderContent = (page) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">switch</span><span class=\"mtk1\"> (page) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">case</span><span class=\"mtk1\"> SERVICE_PAGE.CONTENT:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">ServiceContent</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">case</span><span class=\"mtk1\"> SERVICE_PAGE.RULES:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">Rules</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">case</span><span class=\"mtk1\"> SERVICE_PAGE.MY_PACKAGE:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">MyPackage</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">default</span><span class=\"mtk1\">: </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> </span><span class=\"mtk13\">&lt;&gt;&lt;/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 好像清爽許多？</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">Tabs</span><span class=\"mtk1\"> </span><span class=\"mtk8\">tabs</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">tabs</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk8\">index</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">currentTab.index</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk4\">{</span><span class=\"mtk1\">renderContent(currentTab.page)</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">div</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br>\n<h5 id=\"畫面應該由-React-來控制\" style=\"position:relative;\">畫面應該由 React 來控制<a href=\"#%E7%95%AB%E9%9D%A2%E6%87%89%E8%A9%B2%E7%94%B1-React-%E4%BE%86%E6%8E%A7%E5%88%B6\" aria-label=\"畫面應該由 React 來控制 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>在 React 裡，元件有 controlled 和 uncontrolled 區別，前者透過 state 來保存資料、利用 setState 設定值，後者則是沒有綁定 state，像傳統作法由 DOM 本身處理。</p>\n<p>以程式碼為例，input 元素就是 uncontrolled 的元件</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Search</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">input</span><span class=\"mtk1\"> </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>它的值是由 HTML 元素內部管理和存放，當今天我們想在 React 上知道現在的 search value 是多少，不得不透過其他方式到 DOM 上面找值，因為並不存放在 React 中。</p>\n<p><img src=\"https://i.imgur.com/vrzcY79.png\"></p>\n<p>uncontrolled 看著簡單，然而當你需要控制的 DOM 數量一多起來，手動操作的量就變得繁重， 而 controlled component 是由資料本身來更動畫面，遵循 React「單向資料流」的原則，所以才需要使用到 state，因為這關係了<strong>資料是否由 React 所控制</strong>。</p>\n<hr>\n<p>而要怎麼讓 input 的值被 React 所管理，就要進行事件綁定來監聽。</p>\n<p>不同事件，會連結不同的屬性名稱，像是 onChange、onClick、onSubmit 等等，其實跟我們原本在寫 HTML 元素很像，就是要元素本身擁有這個事件才能設定，像 div 就不會有 submit 事件。</p>\n<p>監聽 input 的 onChange 事件，從參數 event 可以拿到用戶剛剛鍵入的文字，把它存入 state，並設定 input 永遠顯示 state 內的資料，這樣一來就可以做到資料被 React 所管理。</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  state = { term: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Search</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">input</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">value</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{this</span><span class=\"mtk1\">.state.term</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// 顯示 state 的值</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">onChange</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">(e) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.setState({ term: e.target.value })</span><span class=\"mtk4\">}</span><span class=\"mtk1\"> </span><span class=\"mtk3\">// 變動就改 state</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<br>\n<h5 id=\"處理-class-component-中的-this-問題\" style=\"position:relative;\">處理 class component 中的 <code class=\"language-text\">this</code> 問題<a href=\"#%E8%99%95%E7%90%86-class-component-%E4%B8%AD%E7%9A%84-this-%E5%95%8F%E9%A1%8C\" aria-label=\"處理 class component 中的 this 問題 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>事件綁定時，如果操作很多會將 callback function 拉出來寫，通常分配給事件的回調函式會以命名 on 或 handle 開頭，例如 <code class=\"language-text\">onInputChange</code> 或 <code class=\"language-text\">handleInputChange</code>，其實就跟原生 JS 寫法事件綁定寫法一樣。</p>\n<p>但是，卻遇到以下的問題？</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"html\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Cannot read property &#39;state&#39; of undefined</span></span></span></code></pre>\n<p>報錯了！問題就出在 this 上？</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  state = { term: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  onFormSubmit(e) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    e.preventDefault()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.state.term) </span><span class=\"mtk3\">// 🔴 Cannot read property &#39;state&#39; of undefined</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">form</span><span class=\"mtk1\"> </span><span class=\"mtk8\">onSubmit</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{this</span><span class=\"mtk1\">.onFormSubmit</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Search</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">input</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">value</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{this</span><span class=\"mtk1\">.state.term</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">onChange</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">(e) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.setState({ term: e.target.value })</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>在 onFormSubmit 函式裡面用到了 <code class=\"language-text\">this</code>，原本是想要引用 searchBar 類別，但這時的 <code class=\"language-text\">this.state</code> 印出來卻是 undefined？</p>\n<hr>\n<p>在<a href=\"../../%5B%E7%AD%86%E8%A8%98%5D%20%E5%85%8B%E6%9C%8D%20JS%20%E7%9A%84%E5%A5%87%E6%80%AA%E9%83%A8%E5%88%86/\">克服 JavaScript 的奇怪部分</a>中有提到，<code class=\"language-text\">this</code> 的值取決於函式位置及函式被呼叫的方式，一般情況都是指向 window，當函式是連結到物件的方法時（即<strong>作為物件的方法被呼叫</strong>），this 才會指向物件本身。</p>\n<p>有三種方式可以解決：</p>\n<ol>\n<li>在 constructor 設定，以 bind 方法綁好 this 的值</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk4\">constructor</span><span class=\"mtk1\">(props) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">(props)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.state = { term: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.onFormSubmit = </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.onFormSubmit.bind(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">) </span><span class=\"mtk3\">// ✅ it works!</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  onFormSubmit(e) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    e.preventDefault()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.state.term)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"2\">\n<li>寫成箭頭函式（ES6 之後的功能）</li>\n</ol>\n<p>使用箭頭函式會自動將 this 的值確認指向</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  state = { term: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  onFormSubmit = (e) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> {  </span><span class=\"mtk3\">// ✅ this 指向 SearchBar</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    e.preventDefault()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.state.term)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">// ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"3\">\n<li>在 callback function 裡面使用箭頭函式</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"javascript\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> SearchBar </span><span class=\"mtk4\">extends</span><span class=\"mtk1\"> React.Component {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  state = { term: </span><span class=\"mtk11\">&#39;&#39;</span><span class=\"mtk1\"> }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  onFormSubmit(e) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    e.preventDefault()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    console.log(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">.state.term)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  render() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">return</span><span class=\"mtk1\"> ( </span><span class=\"mtk3\">// ✅ 確保 onFormSubmit 的 this 指向，作爲 this(SearchBar) 被呼叫</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">form</span><span class=\"mtk1\"> </span><span class=\"mtk8\">onSubmit</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">(e) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.onFormSubmit(e)</span><span class=\"mtk4\">}</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span><span class=\"mtk1\">Search</span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">label</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">&lt;</span><span class=\"mtk4\">input</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">type</span><span class=\"mtk1\">=</span><span class=\"mtk11\">&quot;text&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">value</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{this</span><span class=\"mtk1\">.state.term</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk8\">onChange</span><span class=\"mtk1\">=</span><span class=\"mtk4\">{</span><span class=\"mtk1\">(e) </span><span class=\"mtk4\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">this</span><span class=\"mtk1\">.setState({ term: e.target.value })</span><span class=\"mtk4\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk13\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk13\">&lt;/</span><span class=\"mtk4\">form</span><span class=\"mtk13\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>不過第三種問題比較大，每次渲染 searchBar 時都會創建不同的 callback function，如果這個 callback function 會作為 props 傳入更下層的元件，就會造成不必要的重複渲染，建議用第二種方式來綁定，避免效能問題。</p>\n<hr>\n<blockquote>\n<p>參考資料</p>\n</blockquote>\n<ul>\n<li><a href=\"%5Bhttps://%5D(https://ithelp.ithome.com.tw/articles/10235204)\">[Day 09] React State &#x26; props</a></li>\n<li><a href=\"%5Bhttps://%5D(https://zhuanlan.zhihu.com/p/278449050)\">React 事件處理中的this的指向問題</a></li>\n<li><a href=\"https://zh-hans.reactjs.org/docs/handling-events.html\">React 官方文件 - 事件處理</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .mtk13 { color: #808080; }\n  .visual-studio-dark .mtk8 { color: #9CDCFE; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E4%B8%8D%E5%9C%A8-constructor-%E8%BC%89%E5%85%A5%E8%B3%87%E6%96%99\">不在 constructor 載入資料</a></li>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E5%88%9D%E5%A7%8B%E5%8C%96%E7%8B%80%E6%85%8B%E7%9A%84%E5%8F%A6%E4%B8%80%E5%AF%AB%E6%B3%95\">初始化狀態的另一寫法</a></li>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E8%A8%AD%E5%AE%9A-default-props\">設定 default props</a></li>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E8%87%AA%E8%A1%8C%E8%A8%AD%E5%AE%9A-renderbody\">自行設定 renderbody</a></li>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E7%95%AB%E9%9D%A2%E6%87%89%E8%A9%B2%E7%94%B1-react-%E4%BE%86%E6%8E%A7%E5%88%B6\">畫面應該由 React 來控制</a></li>\n<li><a href=\"/modern-react-with-redux/%E4%B8%80%E4%BA%9B%E5%85%83%E4%BB%B6%E8%A8%AD%E5%AE%9A%E8%88%87%E4%BA%8B%E4%BB%B6%E7%B6%81%E5%AE%9A%E7%9A%84%E6%8A%80%E5%B7%A7/#%E8%99%95%E7%90%86-class-component-%E4%B8%AD%E7%9A%84-this-%E5%95%8F%E9%A1%8C\">處理 class component 中的 <code class=\"language-text\">this</code> 問題</a></li>\n</ul>","frontmatter":{"title":"一些 React 元件設定與事件綁定的技巧","type":"coding","date":"Jun 19, 2021","tags":["React","Udemy"],"category":"Modern React with Redux","log":"log","thumbnail":null}}},"pageContext":{"slug":"/modern-react-with-redux/一些元件設定與事件綁定的技巧/","previous":{"fields":{"slug":"/modern-react-with-redux/Class Component 和 State System/"},"frontmatter":{"title":"Class Component 和 State System","tags":["React","Udemy"],"date":"2021-06-15","category":"Modern React with Redux","mark":null,"description":"使用 Class Component 的不同、State 的初始化及更新","log":null}},"next":null}},"staticQueryHashes":["63159454"]}