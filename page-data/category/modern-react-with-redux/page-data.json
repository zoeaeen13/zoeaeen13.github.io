{"componentChunkName":"component---src-templates-category-page-js","path":"/category/modern-react-with-redux/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"allMarkdownRemark":{"totalCount":4,"edges":[{"node":{"excerpt":"","fields":{"slug":"/modern-react-with-redux/CH6：討論生命週期/"},"frontmatter":{"date":"Jun 16, 2021","title":"CH6：討論生命週期","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"在 Hook System 還沒有出現時，早期的 functional component 是沒辦法擁有 state，只能用來展示一些固定的內容，資料往往由父層 props 傳入、在創建的時候 data 已經被決定好了。 為什麼需要 Class Component…","fields":{"slug":"/modern-react-with-redux/CH4-5：Class Component 和 State System/"},"frontmatter":{"date":"Jun 15, 2021","title":"CH4/5：Class Component 和 State System","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"認識 JSX 前面說過元件會回傳 JSX，JSX 不是新的語言，它只是 React 提供的語法糖，開發 React 並不一定要使用 JSX，它只是讓我們能更方便、快速建立 HTML 內容（並非真的在撰寫 HTML），瀏覽器是無法辨識 JSX 的，所以需要經由 babel…","fields":{"slug":"/modern-react-with-redux/CH2-3：認識 JSX 和 Component 特性/"},"frontmatter":{"date":"Jun 14, 2021","title":"CH2/3：認識 JSX 和 Component 特性","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"Overview 一般初始化 React 專案，會看到這幾行程式碼  是 React 元件（Component） 元件，用來產出 JSX 語法和處理事件綁定，JSX 是 JavaScript 的一種形式，長得和 HTML 元素很像，用來告訴 React…","fields":{"slug":"/modern-react-with-redux/CH1：React 基本概述/"},"frontmatter":{"date":"Jun 11, 2021","title":"CH1：React 概述","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}}]}},"pageContext":{"category":"Modern React with Redux"}},"staticQueryHashes":["63159454"]}