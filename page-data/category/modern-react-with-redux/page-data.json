{"componentChunkName":"component---src-templates-category-page-js","path":"/category/modern-react-with-redux/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"allMarkdownRemark":{"totalCount":4,"edges":[{"node":{"excerpt":"第六章談到 class component 有生命週期，即繼承 可借用的方法，除了  之外，其他可以自行決定是否要實作，將會在某些特定時機點被 React 觸發。 因為之前已經寫過 React：認識生命週期方法及觸發時間點，這邊會就同樣的部分略過，以紀錄 CH6、CH…","fields":{"slug":"/modern-react-with-redux/一些元件設定與事件綁定的技巧/"},"frontmatter":{"date":"Jun 19, 2021","title":"一些 React 元件設定與事件綁定的技巧","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"在 Hook System 還沒有出現時，早期的 functional component 是沒辦法擁有 state，只能用來展示一些固定的內容，資料往往由父層 props 傳入、在創建的時候 data 已經被決定好了。 為什麼需要 Class Component…","fields":{"slug":"/modern-react-with-redux/Class Component 和 State System/"},"frontmatter":{"date":"Jun 15, 2021","title":"Class Component 和 State System","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"認識 JSX 前面說過元件會回傳 JSX，JSX 不是新的語言，它只是 React 提供的語法糖，開發 React 並不一定要使用 JSX，它只是讓我們能更方便、快速建立 HTML 內容（並非真的在撰寫 HTML），瀏覽器是無法辨識 JSX 的，所以需要經由 babel…","fields":{"slug":"/modern-react-with-redux/認識 JSX 和 Component 特性/"},"frontmatter":{"date":"Jun 14, 2021","title":"認識 JSX 和 Component 特性","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}},{"node":{"excerpt":"Overview 一般初始化 React 專案，會看到這幾行程式碼  是 React 元件（Component） 元件，用來產出 JSX 語法和處理事件綁定，JSX 是 JavaScript 的一種形式，長得和 HTML 元素很像，用來告訴 React…","fields":{"slug":"/modern-react-with-redux/[筆記] Modern React with Redux：概述/"},"frontmatter":{"date":"Jun 11, 2021","title":"[筆記] Modern React with Redux：概述","tags":["React","Udemy"],"category":"Modern React with Redux","type":"coding","thumbnail":null}}}]}},"pageContext":{"category":"Modern React with Redux"}},"staticQueryHashes":["63159454"]}