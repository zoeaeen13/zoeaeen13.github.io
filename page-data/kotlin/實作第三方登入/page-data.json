{"componentChunkName":"component---src-templates-blog-post-js","path":"/kotlin/實作第三方登入/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"4d0832dc-e6b8-5ec9-a5a6-e1bd6c89a141","excerpt":"之前 side-project 有稍微研究，最近案子需求又重新看了一次，乾脆整理起來。 整體來說，Facebook 第三方登入相對容易，Google 和 LINE 則要花時間申請帳號和驗證，需要進行不少步驟，網路上資料很多，就我蒐集到比較清楚的部分來實作。 Facebook…","html":"<p>之前 side-project 有稍微研究，最近案子需求又重新看了一次，乾脆整理起來。</p>\n<p>整體來說，<a href=\"#Facebook%E7%B0%A1%E6%98%93%E7%99%BB%E5%85%A5%E5%81%9A%E6%B3%95\">Facebook 第三方登入</a>相對容易，<a href=\"#Google%E7%99%BB%E5%85%A5\">Google</a> 和 <a href=\"#LINE%E7%99%BB%E5%85%A5\">LINE</a> 則要花時間申請帳號和驗證，需要進行不少步驟，網路上資料很多，就我蒐集到比較清楚的部分來實作。</p>\n<hr>\n<hr>\n<h2 id=\"Facebook簡易登入做法\" style=\"position:relative;\">Facebook簡易登入做法<a href=\"#Facebook%E7%B0%A1%E6%98%93%E7%99%BB%E5%85%A5%E5%81%9A%E6%B3%95\" aria-label=\"Facebook簡易登入做法 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>參考這篇 <a href=\"https://developers.facebook.com/docs/facebook-login/android?locale=zh_TW\">Android 專用 Facebook 登入</a>，基本上按照文件一步一步就可以完成</p>\n<p>在 <strong>XML</strong> 使用，已包裝 LoginManager 可用功能的 UI 元件</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\"> &lt;com.facebook.login.widget.LoginButton</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">id=</span><span class=\"mtk11\">&quot;@+id/btn_facebook_login&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_width=</span><span class=\"mtk11\">&quot;300dp&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_height=</span><span class=\"mtk11\">&quot;300dp&quot;</span><span class=\"mtk1\">/&gt;</span></span></span></code></pre>\n<p><strong>註冊 Callback</strong>\n初始化時建立 CallbackManager</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lateinit </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> callbackManager</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">CallbackManager</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">override fun onCreate(savedInstanceState</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Bundle</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onCreate(savedInstanceState)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    setContentView(R.layout.activity_login)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//建立 CallbackManager</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    callbackManager = CallbackManager.Factory.create()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span></code></pre>\n<p>在 onCreate() 或 onCreateView() 方法中註冊回呼，自定義 LoginButton，登入成功，LoginResult 參數會具有新的 AccessToken </p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">loginButton.setReadPermissions(</span><span class=\"mtk11\">&quot;email&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 如果在 fragment 中使用</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    loginButton.setFragment(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">// 註冊回呼</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_facebook_login.registerCallback(callbackManager,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        object </span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">FacebookCallback</span><span class=\"mtk1\">&lt;LoginResult&gt; {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            override fun onSuccess(result</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> LoginResult</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">// 取得 token 和 userID</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                val token = result!!.accessToken.token.toString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                val userId = result.accessToken.userId.toString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            override fun onCancel() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            override fun onError(error</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> FacebookException</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        })</span></span></span></code></pre>\n<p>要在 onActivityResult 方式中呼叫 callbackManager.onActivityResult，才可以從 LoginManager 取得結果</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">override fun onActivityResult(requestCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, resultCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, data</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Intent</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onActivityResult(requestCode, resultCode, data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//callbackManager 會將登入結果傳送至 LoginManager</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        callbackManager.onActivityResult(requestCode, resultCode, data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong>&#x3C;尚未使用過></strong>\n使用 SDK 從快取或應用程式書籤載入 </p>\n<ul>\n<li>AccessToken.getCurrentAccessToken</li>\n<li>Profile.getCurrentProfile()</li>\n</ul>\n<p>在程式重新啟動時，於 Activity 的 <code class=\"language-text\">onCreate</code> 方法中先檢查是否已登入、是否仍具有效性</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val accessToken = AccessToken.getCurrentAccessToken()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val isLoggedIn</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">boolean</span><span class=\"mtk1\"> = accessToken != </span><span class=\"mtk4\">null</span><span class=\"mtk1\"> &amp;&amp; !accessToken.isExpired()</span></span></span></code></pre>\n<p>之後便可執行實際登入，例如寫在自訂按鈕的 <code class=\"language-text\">OnClickListener</code> 中</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">LoginManager.getInstance().logInWithReadPermissions(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, Arrays.asList(</span><span class=\"mtk11\">&quot;public_profile&quot;</span><span class=\"mtk1\">));</span></span></span></code></pre>\n<hr>\n<h2 id=\"Google登入\" style=\"position:relative;\">Google登入<a href=\"#Google%E7%99%BB%E5%85%A5\" aria-label=\"Google登入 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>流程滿多，會有點複雜，可以參考下面兩篇，前面的配置就略過，筆記一下步驟</p>\n<ol>\n<li>\n<p><strong>XML</strong>裡面放 Google 登入按鈕， 只有提供登入、沒有登出按鈕…只好自己刻一個</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;com.google.android.gms.common.SignInButton</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">id=</span><span class=\"mtk11\">&quot;@+id/btn_google_login&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_width=</span><span class=\"mtk11\">&quot;wrap_content&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_height=</span><span class=\"mtk11\">&quot;wrap_content&quot;</span><span class=\"mtk1\">/&gt;</span></span></span></code></pre>\n</li>\n<li>\n<p>在<code class=\"language-text\">build.gradle</code> implement</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">implementation </span><span class=\"mtk11\">&#39;com.google.android.gms:play-services-auth:17.0.0&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>\n</li>\n<li>這部分實作主要是參考這份<a href=\"https://developers.google.com/identity/sign-in/android/sign-in#add_the_google_sign-in_button_to_your_app\">官方文件</a>，得先去 <a href=\"https://console.developers.google.com/api\">Goodle APIs</a> 新增專案，如果你專案弄好、卻忘了配置一些資訊，在 <a href=\"https://developers.google.com/identity/sign-in/android/start-integrating\">Try Sign-In for Android</a>補上\n<img src=\"https://i.imgur.com/xzksyPl.png\"></li>\n</ol>\n<p>配置 Google API project\n<img src=\"https://i.imgur.com/9337nui.png\"></p>\n<p>要填入包名和SHA-1，完成這兩個才會拿到 <strong>Client ID</strong>，有它才能取得 Token 呀！</p>\n<ul>\n<li>包名(Package Name) 在 <code class=\"language-text\">build.gradle</code> 找</li>\n<li>SHA-1 值</li>\n</ul>\n<p><img src=\"https://i.imgur.com/XfpEgs6.png\"></p>\n<h3 id=\"如何取得-SHA-1-值\" style=\"position:relative;\">如何取得 SHA-1 值<a href=\"#%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97-SHA-1-%E5%80%BC\" aria-label=\"如何取得 SHA 1 值 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>不一定要輸入指令，只要在 Android Studio 右側點選 <code class=\"language-text\">Tasks -&gt; Android -&gt; SigningResport</code>就會出現囉</p>\n<p><img src=\"https://i.imgur.com/kgVYTgS.png\"></p>\n<p><img src=\"https://i.imgur.com/xwjwOrK.png\"></p>\n<hr>\n<ol start=\"4\">\n<li>拿到 Client ID 之後就可以回到程式碼，登入設置如下，就是填入 “serverClientId”</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//Google登入</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private</span><span class=\"mtk1\"> fun google_login(){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//建立 GoogleSignInOptions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val mGoogleSignInOptions = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .requestServerAuthCode(</span><span class=\"mtk11\">&quot;serverClientId&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .requestIdToken(</span><span class=\"mtk11\">&quot;serverClientId&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .requestEmail()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .build()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val mgoogleApiClient = </span><span class=\"mtk4\">GoogleApiClient</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .Builder(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .addApi(Auth.GOOGLE_SIGN_IN_API, mGoogleSignInOptions)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .build()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val signInIntent= Auth.GoogleSignInApi.getSignInIntent(mgoogleApiClient)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    startActivityForResult(signInIntent, REQ_GOOGLE_LOGI)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>我搞不清楚 requestServerAuthCode 和 requestIdToken 差在哪裡，查了一下才知道，<a href=\"https://stackoverflow.com/questions/39668773/what-is-diff-between-requestidtoken-and-requestserverauthcode-in-google-singnin\">參考</a></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//Google登出</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private</span><span class=\"mtk1\"> fun google_logOut() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val gso = </span><span class=\"mtk4\">GoogleSignInOptions</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .requestIdToken(</span><span class=\"mtk11\">&quot;serverClientId&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .requestEmail()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .build()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    mGoogleSignInClient = GoogleSignIn.getClient(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, gso)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    mGoogleSignInClient.signOut()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>接收 Google 回傳結果</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">override fun onActivityResult(requestCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, resultCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, data</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Intent</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onActivityResult(requestCode, resultCode, data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (requestCode == REQ_GOOGLE_LOGIN &amp;&amp; data != </span><span class=\"mtk4\">null</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        val task = GoogleSignIn.getSignedInAccountFromIntent(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        handleGoogleResult(task)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//解析google回傳結果</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private</span><span class=\"mtk1\"> fun handleGoogleResult(task</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">Task</span><span class=\"mtk1\">&lt;GoogleSignInAccount&gt;) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val account = task.getResult(ApiException</span><span class=\"mtk4\">::</span><span class=\"mtk1\">class.java)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val getEmail = account!!.email</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val getidToken = account.idToken</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//由後端去驗證token</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<h3 id=\"Google登入問題\" style=\"position:relative;\">Google登入問題<a href=\"#Google%E7%99%BB%E5%85%A5%E5%95%8F%E9%A1%8C\" aria-label=\"Google登入問題 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong><code class=\"language-text\">com.google.android.gms.common.api.ApiException：10</code> 提供未知的客户端ID</strong></li>\n</ul>\n<p>出現 <code class=\"language-text\">10</code> 錯誤為配置不正確，表示為開發人員的錯誤，可能沒有提供 SHA-1 或是未回應對 idToken 的請求，檢查 <code class=\"language-text\">requestIdToken(getString(R.string.google_app_id))</code> 有無正確填入。</p>\n<ul>\n<li><strong><code class=\"language-text\">com.google.android.gms.common.api.ApiException：12500</code></strong>\n一直出現 <code class=\"language-text\">12500</code> 錯誤，這個真的很難偵錯原因，花了快兩個小時才找到問題解答，參考這篇 <a href=\"https://stackoverflow.com/questions/34068065/error-12500-in-google-sign-in-8-3-0-when-requesting-requestserverauthcode\">error 12500 in google sign in</a> 或 <a href=\"https://t.codebug.vip/questions-1254036.htm\">android:Firebase Google Auth無法使用 ApiException：12500</a>，網上眾說紛紜，發現自己是因為兩種錯誤而造成：</li>\n</ul>\n<hr>\n<p><strong>Web Client ID</strong> 出錯</p>\n<ol>\n<li>打開 <a href=\"https://console.developers.google.com/apis/\">Google API Console</a> 左上角<strong>選擇專案</strong></li>\n<li>按左側「憑證」，會看到 OAuth 2.0 用戶端 ID</li>\n<li>確保你在 <code class=\"language-text\">requestServerAuthCode</code> 方法裡填入的是 <strong>Web Client Id</strong>，而不是 Android</li>\n</ol>\n<p>原因出在輸入 SHA1 後會產生 <strong>Android</strong> 和 <strong>webclient</strong> 兩個 Client ID：\na SHA1 code created both an Android oauth client and a webclient in google developers console.</p>\n<p><img src=\"https://i.imgur.com/pMGwlBa.png\"></p>\n<hr>\n<p><strong>不同的除錯 SHA1-key</strong> 出錯\n找了好久才發現 android 會生成不同的 SHA1 值，因為我打包用的是 release mode，但是一直填到 debug 的 SHA1-key…</p>\n<p><img src=\"https://i.imgur.com/AYVt6FR.png\"></p>\n<hr>\n<h2 id=\"LINE登入\" style=\"position:relative;\">LINE登入<a href=\"#LINE%E7%99%BB%E5%85%A5\" aria-label=\"LINE登入 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Line 登入實作網路上資料不多，最好就是直接參考<a href=\"https://developers.line.biz/en/docs/android-sdk/integrate-line-login/#add-line-sdk-dependency\">官方作法</a></p>\n<ol>\n<li>在 <code class=\"language-text\">build.gradle</code> 添加 LINE SDK</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">repositories {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">   jcenter()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    implementation </span><span class=\"mtk11\">&#39;com.linecorp:linesdk:5.0.1&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">} </span></span></span></code></pre>\n<p>添加 Android 編譯項目，可使用<code class=\"language-text\">Java 1.8 support</code></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">android {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  compileOptions {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        sourceCompatibility JavaVersion.VERSION_1_8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        targetCompatibility JavaVersion.VERSION_1_8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"2\">\n<li>去 <code class=\"language-text\">manifest</code> 加入網路權限</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;uses-permission android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;android.permission.INTERNET&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>設定檔好了後，接著在 <a href=\"https://developers.line.biz/zh-hant/?status=success\">LINE Developer</a> 登入，如果是第一次登就要註冊開發者，登入後須建立一個 Provider，像是 APP 開發團隊或公司名稱，跟個人資訊無關的。</li>\n<li>然後在你建立的 Provider 中，新增一個頻道(channel)，會出現一個像功能列的選單，就是這支頻道是用來做什麼的，因為我們是要用第三方登入就選 <strong>LINE Login</strong></li>\n</ol>\n<p><img src=\"https://i.imgur.com/QUfLcZo.png\"></p>\n<ol start=\"5\">\n<li>基本要填的就是 Channel name、Channel description、Email　三項，然後去設定(LINE Login)選擇 <strong>Mobile APP</strong>，填入包裹名稱</li>\n</ol>\n<p><img src=\"https://i.imgur.com/9SwgPdL.png\"></p>\n<p>也就是 <code class=\"language-text\">build.gradle</code> 裡面的　<strong>applicationId</strong></p>\n<p><img src=\"https://i.imgur.com/fhavrwO.png\"></p>\n<p>如果還不太理解，可以在 <a href=\"https://developers.line.biz/en/docs/messaging-api/getting-started/#creating-a-channel\">Getting started with the Messaging API</a> 查看步驟，填完這些你就可以得到 Channel ID 和 Channel secret 等資料，等下前者是要用來設置參數的。</p>\n<hr>\n<p>前置作業完成了，來實作程式碼的部分，在 XML 上新增一個按鈕，因為 LINE 有提供內建的登入按鈕，這裡就直接使用：</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;com.linecorp.linesdk.widget.LoginButton</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">id=</span><span class=\"mtk11\">&quot;@+id/line_login_btn&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_width=</span><span class=\"mtk11\">&quot;match_parent&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">layout_height=</span><span class=\"mtk11\">&quot;wrap_content&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span></code></pre>\n<p>大概長這個樣子\n<img src=\"https://i.imgur.com/ozwNiHX.png\"></p>\n<p>Activity 的部分，為 LINE 登入按鈕設置必要的參數、監聽器，比較注意的是</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"15\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//LINE登入按鈕設定</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lateinit </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> params</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">LineAuthenticationParams</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">private</span><span class=\"mtk1\"> fun setLineLogin(){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val loginDelegate = LoginDelegate.Factory.create()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//放入ChannelId 字串</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_line_login.setChannelId(</span><span class=\"mtk11\">&quot;1653832701&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//是否只透過LINE APP，或可以透過網頁</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_line_login.enableLineAppAuthentication(</span><span class=\"mtk4\">true</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//params 寫登入後請求的權限範圍</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    params = LineAuthenticationParams.Builder()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .scopes(Arrays.asList(Scope.PROFILE))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        .build()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//Login按鈕參數和監聽器</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_line_login.setAuthenticationParams(params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_line_login.setLoginDelegate(loginDelegate)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    btn_line_login.addLoginListener(object</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> LoginListener{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        override fun onLoginSuccess(result</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> LineLoginResult) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            Toast.makeText(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">@</span><span class=\"mtk4\">MainActivity</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;Login success&quot;</span><span class=\"mtk1\">, Toast.LENGTH_SHORT).show()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        override fun onLoginFailure(result</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> LineLoginResult</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            Toast.makeText(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">@</span><span class=\"mtk4\">MainActivity</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;Login failure&quot;</span><span class=\"mtk1\">, Toast.LENGTH_SHORT).show();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p><strong>🔔開始 LINE 登錄</strong>\n這裡可以有兩種寫法，選擇導入 LINE APP 或是直接開啟 WebView，之後有空補上邏輯，自動判斷使用者是否有裝上某應用程式</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"16\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//使用應用程序登入 #1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">btn_line_login.setOnClickListener{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val loginIntent = LineLoginApi.getLoginIntent(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;1653832701&quot;</span><span class=\"mtk1\">, params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    startActivityForResult(loginIntent, REQ_LINE_CODE)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">//瀏覽器的LINE登入 #2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">btn_line_login.setOnClickListener{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val loginIntent = LineLoginApi.getLoginIntentWithoutLineAppAuth(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;1653832701&quot;</span><span class=\"mtk1\">, params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    startActivityForResult(loginIntent, REQ_LINE_CODE)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p>接收 LINE 登入回傳結果，以 <code class=\"language-text\">onActivityResult()</code> 方法返回，可取得用戶資訊和 <strong>Token</strong></p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"17\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">override fun onActivityResult(requestCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, resultCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, data</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Intent</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onActivityResult(requestCode, resultCode, data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (requestCode == REQ_LINE_CODE &amp;&amp; data != </span><span class=\"mtk4\">null</span><span class=\"mtk1\">){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    val result = LineLoginApi.getLoginResultFromIntent(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    when (result.responseCode) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//回應成功</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        LineApiResponseCode.SUCCESS </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            val userId = result.lineProfile!!.userId</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            val displayName = result.lineProfile!!.displayName</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            val accessToken = result.getLineCredential()!!.getAccessToken().getTokenString()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//回應失敗</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        LineApiResponseCode.CANCEL </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            Log.e(</span><span class=\"mtk11\">&quot;ljwx-line-cancel-&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;cancel&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">else</span><span class=\"mtk1\"> </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">return</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/kotlin/%E5%AF%A6%E4%BD%9C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/#facebook%E7%B0%A1%E6%98%93%E7%99%BB%E5%85%A5%E5%81%9A%E6%B3%95\">Facebook簡易登入做法</a></li>\n<li>\n<p><a href=\"/kotlin/%E5%AF%A6%E4%BD%9C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/#google%E7%99%BB%E5%85%A5\">Google登入</a></p>\n<ul>\n<li><a href=\"/kotlin/%E5%AF%A6%E4%BD%9C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/#%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97-sha-1-%E5%80%BC\">如何取得 SHA-1 值</a></li>\n<li><a href=\"/kotlin/%E5%AF%A6%E4%BD%9C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/#google%E7%99%BB%E5%85%A5%E5%95%8F%E9%A1%8C\">Google登入問題</a></li>\n</ul>\n</li>\n<li><a href=\"/kotlin/%E5%AF%A6%E4%BD%9C%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%85%A5/#line%E7%99%BB%E5%85%A5\">LINE登入</a></li>\n</ul>","frontmatter":{"title":"Android - 實作第三方登入","date":"Feb 11, 2020","tags":["Kotlin"],"category":"Android","log":null,"thumbnail":null}}},"pageContext":{"slug":"/kotlin/實作第三方登入/","previous":{"fields":{"slug":"/kotlin/開啟相機權限/"},"frontmatter":{"title":"Android - 掃描 QR Code","tags":["Kotlin"],"date":"2019-11-26","category":"Android","mark":null,"description":"開啟相機權限及掃瞄功能","log":null}},"next":{"fields":{"slug":"/note/想知道嗎｜Ofa：成為一位數位遊牧民族/"},"frontmatter":{"title":"想知道嗎｜Ofa：成為一位數位遊牧民族","tags":["好想工作室","想知道嗎"],"date":"2020-02-15","category":null,"mark":null,"description":null,"log":null}}}},"staticQueryHashes":["63159454"]}