{"componentChunkName":"component---src-templates-blog-post-js","path":"/kotlin/方形照片裁切/","result":{"data":{"site":{"siteMetadata":{"title":"Travel in Time.","author":"Zoe Yu"}},"markdownRemark":{"id":"ea86b3eb-6b3d-5268-9748-64bc323ba23e","excerpt":"很久沒有用相機了，還好之前寫過 Android - 掃描 QR Code 可以參考，這次是運用在會員登入的大頭貼，實作照相方形裁切 流程思考 一個 Button 和一個 ImageView，按下之後拍照、裁剪成方形，顯示在 ImageView 上面。  一開始是想在 Intent…","html":"<p>很久沒有用相機了，還好之前寫過 <a href=\"../%E9%96%8B%E5%95%9F%E7%9B%B8%E6%A9%9F%E6%AC%8A%E9%99%90\">Android - 掃描 QR Code</a> 可以參考，這次是運用在會員登入的大頭貼，實作照相方形裁切</p>\n<h2 id=\"流程思考\" style=\"position:relative;\">流程思考<a href=\"#%E6%B5%81%E7%A8%8B%E6%80%9D%E8%80%83\" aria-label=\"流程思考 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>一個 Button 和一個 ImageView，按下之後拍照、裁剪成方形，顯示在 ImageView 上面。</p>\n<p><img src=\"https://i.imgur.com/k3R15Bd.gif\"></p>\n<p>一開始是想在 Intent 請求發送的時候，直接帶成方形相框，不過考量到之後可能也要做從手機圖庫取得，裁剪成方形，決定寫成 function，拆分成兩個步驟：</p>\n<ol>\n<li>先拍照後儲存</li>\n<li>從儲存的照片來裁剪，顯示在 ImageView</li>\n</ol>\n<p>這裡會遇到兩個問題，如何取得儲存的照片和怎麼進行剪裁？</p>\n<p>剪裁本來想透過 <code class=\"language-text\">Intent(&quot;com.android.camera.action.CROP&quot;)</code> 方法，查到資料說有些版本會無法實現、報 ActivityNotFound 的異常，後來搞了很久決定換種方式，以第三方套件來進行裁剪。\n另一個問題是要取得儲存的照片，避免用 intent 帶回來的檔案太大，決定用 Uri 去連結它，但 API 24 版本以上的 Android 不再允許在 app 中透漏 <code class=\"language-text\">file://Uri</code></p>\n<ul>\n<li>使用 <a href=\"https://developer.android.com/reference/android/support/v4/content/FileProvider\">FileProvider</a> 轉換共享路徑並取得 <code class=\"language-text\">content:// Uri</code></li>\n<li><a href=\"https://github.com/ArthurHub/Android-Image-Cropper\">Android Image Cropper</a> 進行剪裁</li>\n</ul>\n<hr>\n<h2 id=\"1檢查相機和請求權限\" style=\"position:relative;\">1.檢查相機和請求權限<a href=\"#1%E6%AA%A2%E6%9F%A5%E7%9B%B8%E6%A9%9F%E5%92%8C%E8%AB%8B%E6%B1%82%E6%AC%8A%E9%99%90\" aria-label=\"1檢查相機和請求權限 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>基本和上一篇大同小異，會先取得相機，根據回傳結果來獲得權限，<code class=\"language-text\">onRequestPermissionsResult</code>方法類似於請求權限的 onActivityResult，詳細程式碼可以回之前文章查看：</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">class</span><span class=\"mtk1\"> MainActivity : AppCompatActivity() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    companion object {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">private</span><span class=\"mtk1\"> </span><span class=\"mtk4\">const</span><span class=\"mtk1\"> val MY_PERMISSIONS_REQUEST_READ_CONTACTS = </span><span class=\"mtk5\">100</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    override fun onCreate(savedInstanceState: Bundle?) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onCreate(savedInstanceState)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        setContentView(R.layout.activity_main)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk3\">//僅請求權限，尚未實作</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        cameraPermission()  </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//請求的授權結果</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    override fun onRequestPermissionsResult</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    (requestCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, permissions</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> </span><span class=\"mtk4\">Array</span><span class=\"mtk1\">&lt;String&gt;, grantResults</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> IntArray) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        when (requestCode) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            MY_PERMISSIONS_REQUEST_READ_CONTACTS </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">//請求相機權限</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    fun cameraPermission(){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (ContextCompat.checkSelfPermission(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, Manifest.permission.CAMERA)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            != PackageManager.PERMISSION_GRANTED) {  </span><span class=\"mtk3\">//判斷是否未取得權限(!=)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            ...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }    </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<h2 id=\"2-進行拍照並儲存路徑\" style=\"position:relative;\">2. 進行拍照並儲存路徑<a href=\"#2-%E9%80%B2%E8%A1%8C%E6%8B%8D%E7%85%A7%E4%B8%A6%E5%84%B2%E5%AD%98%E8%B7%AF%E5%BE%91\" aria-label=\"2 進行拍照並儲存路徑 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li><code class=\"language-text\">Intent(MediaStore.ACTION_IMAGE_CAPTURE)</code> 基本的調用照相機介面，拍完照會呼叫 onActivityResult</li>\n<li>新增名為 tmpFile 的檔案\n如果不清楚 <code class=\"language-text\">getExternalFilesDir(null)</code>，可以參考<a href=\"https://blog.csdn.net/nugongahou110/article/details/48154859\">這篇</a>，儲存成該 App 專屬文件，就是在 external storage 裡面新增一個 tmpFile 檔案</li>\n<li>將這個 tmpFile 檔利用 FileProvider 轉換路徑，取得 <code class=\"language-text\">content:// Uri</code></li>\n<li>傳送一個<code class=\"language-text\">EXTRA_OUTPUT</code> 給 Intent, 指定拍照後儲存圖像的路徑</li>\n</ul>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">lateinit </span><span class=\"mtk4\">var</span><span class=\"mtk1\"> saveUri</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Uri  </span><span class=\"mtk3\">//外部變數，給onActivityResult使用</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    camera_crop_button.setOnClickListener{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        cameraPermission()   </span><span class=\"mtk3\">//請求權限</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        val cameraintent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        val fileName = System.currentTimeMillis().toString() + </span><span class=\"mtk11\">&quot;.jpg&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        val tmpFile = File(getExternalFilesDir(</span><span class=\"mtk4\">null</span><span class=\"mtk1\">).toString(), fileName)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        val uriForCamera = FileProvider.getUriForFile(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, BuildConfig.APPLICATION_ID + </span><span class=\"mtk11\">&quot;.fileprovider&quot;</span><span class=\"mtk1\">, tmpFile)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        saveUri = uriForCamera</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        cameraintent.putExtra(MediaStore.EXTRA_OUTPUT, uriForCamera)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        startActivityForResult(cameraintent, </span><span class=\"mtk5\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span></code></pre>\n<hr>\n<h2 id=\"路徑轉換---使用-FileProvider\" style=\"position:relative;\">路徑轉換 - 使用 FileProvider<a href=\"#%E8%B7%AF%E5%BE%91%E8%BD%89%E6%8F%9B---%E4%BD%BF%E7%94%A8-FileProvider\" aria-label=\"路徑轉換   使用 FileProvider permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li>Manifest 加上 <strong>provider</strong></li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;provider</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;androidx.core.content.FileProvider&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">authorities=</span><span class=\"mtk11\">&quot;包名.fileprovider&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">exported=</span><span class=\"mtk11\">&quot;false&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">grantUriPermissions=</span><span class=\"mtk11\">&quot;true&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;meta-data</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">resource=</span><span class=\"mtk11\">&quot;@xml/provider_paths&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/provider&gt;</span></span></span></code></pre>\n<ul>\n<li>name：大部分資料還是使用 <code class=\"language-text\">android.support.v4.content.FileProvider</code>，用 androidx 作業系統的話要改填 <code class=\"language-text\">androidx.core.content.FileProvider</code></li>\n<li>authorities：填入”包名+fileprovider”，包名可以去 build.gradle 查看 applicationId\n<img src=\"https://i.imgur.com/fH6HYxK.png\"></li>\n<li>resource 填的是 xml 路徑下的 provider_paths.xml，所以下一步就是去增加這個檔案</li>\n</ul>\n<hr>\n<ol start=\"2\">\n<li>在 res/xml/ 下新增 provider_paths.xml，主要在寫路徑轉換的規則，想更了解路徑轉換規則可以看小魚<a href=\"https://ithelp.ithome.com.tw/articles/10202627\">這篇</a>，因為一些問題我就配置成 root-path</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">?</span><span class=\"mtk1\">xml version=</span><span class=\"mtk11\">&quot;1.0&quot;</span><span class=\"mtk1\"> encoding=</span><span class=\"mtk11\">&quot;utf-8&quot;</span><span class=\"mtk4\">?</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;paths&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    &lt;root-path name=</span><span class=\"mtk11\">&quot;name&quot;</span><span class=\"mtk1\"> path=</span><span class=\"mtk11\">&quot;&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/paths&gt;</span></span></span></code></pre>\n<hr>\n<ol start=\"3\">\n<li>取得 content://Uri</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">FileProvider.getUriForFile(context, authorities, file)</span></span></span></code></pre>\n<p>特別要注意第二個 authorities，要和 Manifest.xml 裡 provider 中設定的 authorities 相同才行，第三個參數則放要被轉換路徑的原檔案。\n直接把轉換後的路徑指給之前設的變數，再進行 startActivityForResult 拍照</p>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">val uriForCamera = FileProvider.getUriForFile(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">, BuildConfig.APPLICATION_ID + </span><span class=\"mtk11\">&quot;.fileprovider&quot;</span><span class=\"mtk1\">, tmpFile)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    saveUri = uriForCamera</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    cameraintent.putExtra(MediaStore.EXTRA_OUTPUT, uriForCamera)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    startActivityForResult(cameraintent, </span><span class=\"mtk5\">1</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<hr>\n<h2 id=\"利用-Android-Image-Cropper-照片裁切\" style=\"position:relative;\">利用 <a href=\"https://github.com/ArthurHub/Android-Image-Cropper\">Android Image Cropper</a> 照片裁切<a href=\"#%E5%88%A9%E7%94%A8-Android-Image-Cropper-%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87\" aria-label=\"利用 Android Image Cropper 照片裁切 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>拍照後會呼叫 onActivityResult，在回傳結果裡面進行照片裁切</p>\n<ol>\n<li>在<code class=\"language-text\">build.gradle</code> implement</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dependencies {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    api </span><span class=\"mtk11\">&#39;com.theartofdev.edmodo:android-image-cropper:2.8.+&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<ol start=\"2\">\n<li>在 Manifest.xml 新增</li>\n<li>permissions</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;uses-permission android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span><span class=\"mtk1\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;uses-permission android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span><span class=\"mtk1\">/&gt;</span></span></span></code></pre>\n<ul>\n<li>CropImageActivity</li>\n</ul>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;activity</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">name=</span><span class=\"mtk11\">&quot;com.theartofdev.edmodo.cropper.CropImageActivity&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    android</span><span class=\"mtk4\">:</span><span class=\"mtk1\">theme=</span><span class=\"mtk11\">&quot;@style/Base.Theme.AppCompat&quot;</span><span class=\"mtk1\"> /&gt;</span></span></span></code></pre>\n<ol start=\"3\">\n<li>在 Proguard config file 加一行，檔案位置如下圖</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">-keep </span><span class=\"mtk4\">class</span><span class=\"mtk1\"> androidx.appcompat.widget.** { *; }</span></span></span></code></pre>\n<p><img src=\"https://i.imgur.com/8lgxiK5.png\"></p>\n<ol start=\"4\">\n<li>回到 MainAcitvity.kt，在拍照回傳結果後進行 Uri 裁剪，剛剛儲存的外部變數就可以用上</li>\n<li>也會在 onActivityResult 拿到裁剪後的結果，設定 ImageView</li>\n</ol>\n<pre class=\"grvsc-container visual-studio-dark\" data-language=\"java\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">override fun onActivityResult(requestCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, resultCode</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Int, data</span><span class=\"mtk4\">:</span><span class=\"mtk1\"> Intent</span><span class=\"mtk4\">?</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk4\">super</span><span class=\"mtk1\">.onActivityResult(requestCode, resultCode, data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    when (requestCode) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk5\">1</span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (resultCode == Activity.RESULT_OK){</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk3\">//裁切照片和規定尺寸</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                CropImage.activity(saveUri)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    .setAspectRatio(</span><span class=\"mtk5\">1</span><span class=\"mtk1\">,</span><span class=\"mtk5\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    .start(</span><span class=\"mtk4\">this</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE </span><span class=\"mtk4\">-&gt;</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            val result = CropImage.getActivityResult(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (resultCode == RESULT_OK) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    val resultUri = result.getUri()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    imageView2.setImageURI(resultUri)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                } </span><span class=\"mtk4\">else</span><span class=\"mtk1\"> </span><span class=\"mtk4\">if</span><span class=\"mtk1\"> (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    val error = result.getError()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<hr>\n<h4 id=\"參考資料\" style=\"position:relative;\">參考資料<a href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\" aria-label=\"參考資料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10202627\">Android Kotlin 實作 Day 3 : Image picker ( 使用 Permission+ FileProvider + Intent)</a></li>\n<li><a href=\"https://androidx.de/androidx/core/content/FileProvider.html\">androidx - FileProvider</a></li>\n<li><a href=\"https://www.jianshu.com/p/6b21c2bed493\">android 相機 頭像剪裁</a></li>\n<li><a href=\"https://github.com/ArthurHub/Android-Image-Cropper/wiki\">Android-Image-Cropper 設定</a></li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .visual-studio-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .visual-studio-dark .mtk4 { color: #569CD6; }\n  .visual-studio-dark .mtk1 { color: #D4D4D4; }\n  .visual-studio-dark .mtk5 { color: #B5CEA8; }\n  .visual-studio-dark .mtk3 { color: #6A9955; }\n  .visual-studio-dark .mtk11 { color: #CE9178; }\n  .visual-studio-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","tableOfContents":"<ul>\n<li><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#%E6%B5%81%E7%A8%8B%E6%80%9D%E8%80%83\">流程思考</a></li>\n<li><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#1%E6%AA%A2%E6%9F%A5%E7%9B%B8%E6%A9%9F%E5%92%8C%E8%AB%8B%E6%B1%82%E6%AC%8A%E9%99%90\">1.檢查相機和請求權限</a></li>\n<li><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#2-%E9%80%B2%E8%A1%8C%E6%8B%8D%E7%85%A7%E4%B8%A6%E5%84%B2%E5%AD%98%E8%B7%AF%E5%BE%91\">2. 進行拍照並儲存路徑</a></li>\n<li><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#%E8%B7%AF%E5%BE%91%E8%BD%89%E6%8F%9B---%E4%BD%BF%E7%94%A8-fileprovider\">路徑轉換 - 使用 FileProvider</a></li>\n<li>\n<p><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#%E5%88%A9%E7%94%A8-android-image-cropper-%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87\">利用 Android Image Cropper 照片裁切</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/kotlin/%E6%96%B9%E5%BD%A2%E7%85%A7%E7%89%87%E8%A3%81%E5%88%87/#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99\">參考資料</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Android - 照相裁切方形（使用 FileProvider + Intent）","date":"Feb 26, 2020","tags":["Kotlin"],"category":"Android","log":null,"thumbnail":null}}},"pageContext":{"slug":"/kotlin/方形照片裁切/","previous":{"fields":{"slug":"/note/想知道嗎｜Ofa：成為一位數位遊牧民族/"},"frontmatter":{"title":"想知道嗎｜Ofa：成為一位數位遊牧民族","tags":["好想工作室","想知道嗎"],"date":"2020-02-15","category":null,"mark":null,"description":null,"log":null}},"next":{"fields":{"slug":"/weekly journal/想知道自己現在在哪裡/"},"frontmatter":{"title":"#8 想知道自己現在在哪裡","tags":["life"],"date":"2020-02-27","category":"Weekly Journal","mark":null,"description":null,"log":null}}}},"staticQueryHashes":["63159454"]}