{"version":3,"sources":["webpack:///./src/pages/life.js","webpack:///./src/components/postType/Title.js","webpack:///./src/components/postType/Card.js","webpack:///./src/components/postType/Intro.js","webpack:///./src/components/postType/Gallery.js"],"names":["LifeBlogIndex","data","siteTitle","site","siteMetadata","title","lifePosts","allMarkdownRemark","edges","filter","node","frontmatter","type","keywords","className","map","post","index","key","props","query","render","PostLink","styled","Link","PostDate","p","PostTitle","to","fields","slug","date","PostArticle","article","PostCover","url","Category","div","Content","TagWrap","PostCard","sub","tags","category","tag","excerpt","thumbnail","childImageSharp","fluid","src","IntroWrapper","PostDetail","PostDesc","PostIntro","description","Mask","PostContent","PostGallery"],"mappings":"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","file":"component---src-pages-life-js-87e04ff94fb8d8fa866c.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { PostGallery } from '../components/postType'\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst LifeBlogIndex = ({ data }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const lifePosts = posts.filter(node => node.node.frontmatter.type === 'life')\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`zoeaeen13`, `life`]}\n      />\n      <div className=\"life-post-feed\">\n        {/* <LifeBio /> */}\n        <div className=\"life-post-wrap\">\n          {lifePosts && (\n            lifePosts.map((post, index) => {\n              return (\n                <PostGallery\n                  key={index}\n                  node={post.node}\n                />\n              )\n            })\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            type\n            category\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <LifeBlogIndex props data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostLink = styled(Link)`\n  font-size: 16px;\n  line-height: 23px;\n  letter-spacing: .48px;\n  font-weight: 400;\n  font-stretch: 100%;\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\nconst PostDate = styled.p`\n  color: #9e9e9e;\n  font-size: 13px;\n  font-weight: 500;\n`\n\nconst PostTitle = ({ type, node }) => {\n  return (\n    <>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      {<PostDate>{node.frontmatter.date}</PostDate>}\n    </>\n  )\n}\n\nexport default PostTitle","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\nconst PostArticle = styled.article`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  width: 100%;\n  padding: 30px 0;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`\n\nconst PostCover = styled(Link)`\n  display: block;\n  width: 27%;\n  height:0;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n  transition: opacity .3s ease-in-out;\n  opacity: 1;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-bottom: 55%;\n  }\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  padding-right: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  \n  h4 {\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    font-size: 16px;\n    color: #687385;\n    font-weight: 700;\n    white-space: nowrap;\n\n    @media (max-width: 800px) {\n      margin: 0;\n      margin-right: 10px;\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n\n  a {\n    white-space: nowrap;\n    color: #687385;\n    font-size: 14px;\n    cursor: pointer;\n\n    &:hover {\n      color: #4a4a4a;\n    }\n\n    @media (max-width: 800px) {\n      font-size: 12px;\n      font-weight: bold;\n      color: #919aa9;\n    }\n  }\n`\n\nconst Content = styled.div`\n  width: ${props => props.type === 'coding' ? '75%': '50%'};\n  padding-right: 10px;\n\n  a {\n    display: block;\n    font-size: 20px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 10px;\n    color: #4a4a4a;\n\n    &:hover {\n      color: #C5322E;\n      text-decoration: none;\n    }\n  }\n\n  p {\n    overflow:hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: ${props => props.type === 'coding' ? '2': '3'};\n    -webkit-box-orient: vertical;\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    padding-right: 0px;\n  }\n`\nconst TagWrap = styled.div`\n  a {\n    display: block;\n    @media (max-width: 800px) {\n      display: none;\n    }\n  }\n`\n\n\nconst PostCard =  ({ sub, type, node }) => {\n  const tags = node.frontmatter.tags\n  return (\n  <PostArticle>\n    <Category>\n      <h4>{node.frontmatter.date}</h4>\n      {sub === 'category' ?\n        (<Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>) :\n        (<TagWrap>\n          {tags.map((tag, index) => <Link key={index} to={`/tags/${kebabCase(tag)}`}>{`#${tag}`}</Link>)}\n        </TagWrap>)\n      }\n    </Category>\n    <Content type={type}>\n      <Link to={node.fields.slug}>{node.frontmatter.title || node.fields.slug}</Link>\n      <p>{node.excerpt !== 'â€¦'? node.excerpt : ''}</p>\n    </Content>\n    {node.frontmatter.thumbnail && <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src} />}\n  </PostArticle>\n)}\n\n\nexport default PostCard","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\nimport { kebabCase } from 'lodash'\n\nconst IntroWrapper = styled.div`\n  padding: 20px;\n\n  @media (max-width: 850px) {\n    padding: 20px 0;\n  }\n\n  hr {\n    margin: 0;\n    padding: 0;\n    width: 10px;\n    height: 1px;\n    background: #9a9a9a;\n  }\n`\n\nconst PostDetail = styled.div`\n  display: flex;\n  margin: 10px 0;\n\n  p, a {\n    margin: 0;\n    padding: 0;\n    margin-right: 10px;\n    color: #9e9e9e;\n    font-size: 13px;\n    font-weight: 500;\n  }\n\n  a {\n    font-weight: bold;\n  }\n`\n\nconst PostLink = styled(Link)`\n  margin-bottom: .25rem;\n  font-size: 1.9rem;\n  font-weight: bold;\n  line-height: 1.4;\n  letter-spacing: .48px;\n  color: #666666;\n  text-decoration: none;\n  outline: none;\n  transition: all .3s ease;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\n\nconst PostDesc = styled.p`\n  font-size: 16px;\n  overflow:hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`\n\nconst PostIntro = ({ node }) => {\n  return (\n    <IntroWrapper>\n      <PostLink to={node.fields.slug}>{node.frontmatter.title}</PostLink>\n      <PostDetail>\n        <p>{node.frontmatter.date}</p>\n        <Link to={`/category/${kebabCase(node.frontmatter.category)}`}>{node.frontmatter.category}</Link>\n      </PostDetail>\n      <PostDesc>{node.frontmatter.description || node.excerpt}</PostDesc>\n      <hr/>\n    </IntroWrapper>\n  )\n}\n\nexport default PostIntro","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst PostCard = styled.article`\n  position: relative;\n  display: flex;\n  margin-bottom: 5vh;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`\nconst PostCover = styled(Link)`\n  position: relative;\n  display: block;\n  width: 500px;\n  height: 338px;\n  padding-bottom: 18%;\n  overflow: hidden;\n  background-size: cover;\n  background-position: center center;\n\n  ${props => `\n    background-image: url(${props.url? props.url:''});\n  `}\n\n  @media (max-width: 1024px) {\n    width: 100%;\n    padding-bottom: 55%;\n\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n\n  &:hover {\n    & > div {\n      opacity: 1;\n    }\n\n    & article {\n      visibility: visible;\n    }\n  }\n`\nconst Mask = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, .3);\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  transition: opacity .3s ease-in-out;\n`\nconst PostContent = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 550px;\n  padding: 10px;\n  white-space: normal;\n  width: 250px;\n  height: 180px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 7;\n  -webkit-box-orient: vertical;\n  font-style: italic;\n\n  @media (max-width: 1024px) {\n    position: relative;\n    top: 0;\n    left: 0;\n    width: auto;\n    height: auto;\n  }\n`\nconst PostDetail = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  visibility: hidden;\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  color: white;\n\n  h3, h5 {\n    text-align:right;\n    margin: 0;\n    padding: 0;\n    font-family: \"IBM Plex Serif\",source-han-serif-tc,serif;\n    font-size: 28px;\n    line-height: 32px;\n  }\n  h5 {\n    font-size: 13px;\n  }\n`\n\nconst PostGallery =  ({ node }) => {\n  const tags = node.frontmatter.tags\n  return (\n    <PostCard>\n      <PostCover to={node.fields.slug} url={node.frontmatter.thumbnail.childImageSharp.fluid.src}>\n        <Mask />\n        <PostDetail>\n          <h5>{node.frontmatter.date}</h5>\n          <h3>{node.frontmatter.title}</h3>\n        </PostDetail>\n      </PostCover>\n      <PostContent>{node.excerpt !== 'â€¦'? node.excerpt : ''}</PostContent>\n    </PostCard>\n  )}\n\n\nexport default PostGallery"],"sourceRoot":""}