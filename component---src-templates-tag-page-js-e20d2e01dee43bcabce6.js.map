{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/tag.js"],"names":["TagPageTemplate","pageContext","data","location","tag","tags","posts","allMarkdownRemark","edges","siteTitle","site","siteMetadata","title","charAt","toUpperCase","slice","keywords","className","totalCount","map","node","sub","key","fields","slug","type","frontmatter","postClass","index","to","BlogTag","styled","Link","PageTag","TagDivider","div","Divider"],"mappings":"iMA4CeA,UApCS,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACnCC,EAAMH,EAAYG,IAClBC,EAAOJ,EAAYI,KACnBC,EAAQJ,EAAKK,kBAAkBC,MAC/BC,EAAYP,EAAKQ,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUS,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAK,KAAMR,EAAIS,OAAO,GAAGC,cAAgBV,EAAIW,MAAM,IACnDC,SAAU,CAAC,GAAGZ,EAAJ,wCAEZ,4BAAQa,UAAU,iBAChB,gCAAMb,EAAN,IAAYF,EAAKK,kBAAkBW,WAAnC,MAEF,yBAAKD,UAAU,aACZX,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,kBAAC,IAAD,CACEC,IAAK,WACLC,IAAKF,EAAKG,OAAOC,KACjBC,KAAML,EAAKM,YAAYD,KACvBL,KAAMA,EACNO,UAAS,YAIf,kBAAC,IAAD,MACCtB,EAAKc,KAAI,SAACf,EAAKwB,GACd,OAAO,kBAAC,IAAD,CAAKN,IAAKM,EAAOC,GAAE,SAAW,IAAUzB,IAASA,U,kCCrCpE,uJAIa0B,EAAUC,YAAOC,QAAV,+DAAGD,CAAH,qOAkBPE,EAAUF,YAAOC,QAAV,+DAAGD,CAAH,uRAoBdG,EAAaH,IAAOI,IAAV,kEAAGJ,CAAH,iNAsBHK,EAAU,WACrB,OACE,kBAACF,EAAD,KACE,oCAAa","file":"component---src-templates-tag-page-js-e20d2e01dee43bcabce6.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { kebabCase } from 'lodash'\nimport { PageTag as Tag, Divider } from \"../components/tag\"\nimport { PostCard } from \"../components/postType\"\n\nconst TagPageTemplate = ({pageContext, data, location}) => {\n    const tag = pageContext.tag\n    const tags = pageContext.tags\n    const posts = data.allMarkdownRemark.edges\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title={`#${tag.charAt(0).toUpperCase() + tag.slice(1)}`}\n          keywords={[`${tag}`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <header className=\"tag-page-head\">\n          <h1>#{tag}({data.allMarkdownRemark.totalCount})</h1>\n        </header>\n        <div className=\"post-feed\">\n          {posts.map(({ node }) => {\n            return (\n              <PostCard\n                sub={'category'}\n                key={node.fields.slug}\n                type={node.frontmatter.type}\n                node={node}\n                postClass={`post`}\n              />\n            )\n          })}\n          <Divider />\n          {tags.map((tag, index) => {\n            return <Tag key={index} to={`/tags/${kebabCase(tag)}`}>{tag}</Tag>\n          })}\n        </div>\n      </Layout>\n    )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query PostByTag($tag: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n            category\n            type\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nexport const BlogTag = styled(Link)`\n  padding: 8px 24px;\n  margin-right: 16px;\n  font-size: 12px;\n  margin-bottom: 16px;\n  font-weight: 500;\n  letter-spacing: .5px;\n  line-height: 24px;\n  color: #181818;\n  border: 1px solid #ECECEC;\n  border-radius: 4px;\n\n  &:hover {\n    color: #C5322E;\n    text-decoration: none;\n  }\n`\n\nexport const PageTag = styled(Link)`\n  margin-right: 16px;\n  margin-bottom: 16px;\n  border-bottom: 2px solid transparent;\n  padding: 4px 16px;\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: .5px;\n  line-height: 24px;\n  color: #181818;\n  background: #F6F6F6;\n  transition: all .3s ease-in-out;\n\n\n  &:hover {\n    border-color: #181818;\n    text-decoration: none;\n  }\n`\n\nconst TagDivider = styled.div`\n  margin: 5vh 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  h5 {\n    font-size: 18px;\n    font-weight: 700;\n    color: #3a3a3a;\n    margin: 0;\n    padding: 0;\n  }\n\n  & > div {\n    width: 85%;\n    height: 2px;\n    background: #3a3a3a;\n  }\n`\n\nexport const Divider = () => {\n  return (\n    <TagDivider>\n      <h5>Tags</h5><div></div>\n    </TagDivider>\n  )\n}"],"sourceRoot":""}